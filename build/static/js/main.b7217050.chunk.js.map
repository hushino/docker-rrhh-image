{"version":3,"sources":["redux/middleware/middleware.js","redux/reducers.js","redux/store.js","serviceWorker.js","components/login/Login.js","components/ColorPicker/index.js","components/ColorPicker/theme.js","App.js","components/adminPanel/AdminPanel.js","components/userPanel/UserPanel.js","components/noPageFound/NoPageFound.js","components/persona/Viewpersona.js","components/persona/manyside/Editarlicencia.js","components/persona/manyside/altasAscensosBajas/EditarAltasAscensosBajas.js","components/persona/manyside/ConceptoConocimientosEspecialesClasificacionPremios/EditarConceptoConocimientosEspecialesClasificacionPremios.js","components/persona/manyside/embargos/EditarEmbargo.js","components/persona/manyside/garantia/EditarGarantia.js","components/persona/manyside/otrosServiciosPrestados/EditarOtrosServiciosPrestados.js","components/persona/manyside/penasDisciplinariasSufridas/EditarPenasDisciplinariasSufridas.js","components/persona/Editarpersona.js","components/persona/Crearpersona.js","components/persona/manyside/altasAscensosBajas/AgregarAltasAscensosBajas.js","components/persona/manyside/ConceptoConocimientosEspecialesClasificacionPremios/AgregarConceptoConocimientosEspecialesClasificacionPremios.js","components/persona/manyside/embargos/Agregarembargos.js","components/persona/manyside/garantia/AgregarGarantia.js","components/persona/manyside/otrosServiciosPrestados/AgregarOtrosServiciosPrestados.js","components/persona/manyside/penasDisciplinariasSufridas/AgregarPenasDisciplinariasSufridas.js","components/persona/manyside/Agregarlicencia.js","components/header/Header.js","index.js"],"names":["logger","store","next","action","console","log","result","getState","initialState","Authorization","Role","myReducer","state","type","role","stateOfLife","roles","forEach","element","authority","localStorage","setItem","accessToken","nombreusuario","createStore","applyMiddleware","Boolean","window","location","hostname","match","WrappedNormalLoginForm","create","name","props","dispatch","useDispatch","isAnyRole","getItem","payload","usernameOrEmail","password","React","useState","updateState","forceUpdate","useCallback","useEffect","fetchData","a","axios","post","response","data","getFieldDecorator","form","size","onClick","reload","onSubmit","e","preventDefault","validateFields","err","values","username","setTimeout","className","Item","rules","required","message","prefix","style","color","placeholder","htmlType","noop","pickers","chrome","ChromePicker","sketch","SketchPicker","ColorPicker","handleClick","setState","displayColorPicker","handleClose","handleChange","hex","onChange","handleChangeComplete","onChangeComplete","nextProps","this","small","position","Picker","styles","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","wrapper","transform","paddingBottom","picker","Component","defaultProps","Theme","handleSubmit","normFile","Array","isArray","fileList","varName","vars","handleColorChange","varname","less","modifyVars","then","JSON","stringify","catch","error","getColorPicker","key","xs","presetColors","resetTheme","initialValue","temelight","aliyunTheme","temeDark","darkTheme","Object","assign","parse","sm","title","marginTop","Header","Content","Footer","Sider","App","setData","setRole","reduxsub","isSubscribed","subscribe","get","headers","Fragment","onBack","backIcon","subTitle","span","justify","params","Meta","AdminPanel","gutter","to","textAlign","UserPanel","loading","setLoading","current","pageSize","sortOrder","isRoleAdmin","integer","parseInt","integer2","urls","nombre","apellido","dni","legajo","pagination","total","totalElements","content","handleSearch","selectedKeys","confirm","dataIndex","searchText","searchInput","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","ref","node","value","target","onPressEnter","marginBottom","icon","marginRight","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","select","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","columns","sorter","rowKey","id","dataSource","filters","pager","field","order","NoPageFound","Viewpersona","useLayoutEffect","licenciasget","licencias","length","map","licencias2","fechaLicencia","penasDisciplinariasSufridasget","penasDisciplinariasSufridas","penasDisciplinariasSufridas2","fecha","expediente","referencias","otrosServiciosPrestadosget","otrosServiciosPrestados","otrosServiciosPrestados2","garantiasget","garantias","garantias2","garantia","presentadaFecha","observaciones","embargosget","embargos","embargos2","juzgado","acreedor","cantidad","fianzaODeudaPropia","origenDeLaDeuda","levantada","conceptoConocimientosEspecialesClasificacionPremios","conceptoConocimientosEspecialesClasificacionPremios2","usuriosmod","detailUserTracks","detailUserTracks2","Group","doc","jsPDF","apodo","cuit","soltero","casado","conviviente","viudo","domicilio","calle","numero","telefonofijo","numerodecelular","oficioprofecion","niveldeestudios","gruposanguineo","diabetes","hipertension","alergias","asma","fechadeingreso","resolucion","categoria","item","planta","direccion","annos","ads","addPage","meses","familiaracargonombre","familiaracargodni","familiaracargonombre2","familiaracargodni2","realizocomputodeservicios","poseeconocimientoenmaquinasviales","casoemergenciacelular","casoemergenciacelular2","casoemergenciafijo","casoemergenciafijo2","casoemergencianombre","casoemergencianombre2","save","shape","src","foto","bordered","label","lugar","otros","delete","WrappedEditarLicenciaForm","truedata","personaidd","personaid","setFieldsValue","numeroDeDias","usuariosMod","postData","WrappedEditarAltasAscensosBajasForm","cargo","prestaservicioen","TextArea","WrappedEditarConceptoConocimientosEspecialesClasificacionPremiosForm","refContainer","useRef","rows","WrappedEditarEmbargoForm","WrappedEditarGarantiaForm","WrappedEditarOtrosServiciosPrestadosForm","WrappedEditarPenasDisciplinariasSufridasForm","TabPane","WrappedEditarPersonaForm","uploadImage","setUploadImage","imagestate","setImagestate","reader","FileReader","postImage","bodyFormData","filename","usuariosModPersona","donante","area","dias","uploadButton","alt","imageUrl","defaultActiveKey","tab","listType","showUploadList","beforeUpload","file","isJpgOrPng","isLt2M","info","img","callback","status","success","FormData","append","Blob","originFileObj","addEventListener","readAsDataURL","vuido","Crearpersona","onChangeHandler3","event","files","selectedFile","onClickHandler","res","x","getFieldsError","getFieldError","isFieldTouched","multiple","WrappedCrearpersonaForm","WrappedCrearAgregarAltasAscensosBajasForm","WrappedCrearAgregarConceptoConocimientosEspecialesClasificacionPremiosForm","WrappedAgregarembargosForm","WrappedAgregarGarantiaForm","WrappedAgregarOtrosServiciosPrestadosForm","WrappedAgregarPenasDisciplinariasSufridasForm","WrappedCrearlicenciaForm","fecha_licencia","mode","path","exact","component","ReactDOM","stores","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7217050.chunk.js","sourcesContent":["const logger = store => next => action => {\r\n    console.log('dispatching', action);\r\n    let result = next(action);\r\n    console.log('next state', store.getState());\r\n    return result\r\n};\r\n\r\nexport default logger","const initialState = {\r\n    Authorization: 'false',\r\n    Role: 'null'\r\n}\r\nconst myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 0:\r\n            //state.Authorization = action.stateOfLife.accessToken\r\n            let role = '';\r\n\r\n            action.stateOfLife.roles.forEach(element => {\r\n                role = element.authority\r\n\r\n            });\r\n            localStorage.setItem(\"authorization\", 'Bearer ' + action.stateOfLife.accessToken);\r\n            localStorage.setItem(\"nombreusuario\", action.stateOfLife.nombreusuario);\r\n            //console.log(action.stateOfLife.accessToken)\r\n            return {\r\n                Authorization: 'Bearer ' + action.stateOfLife.accessToken,\r\n                Role: role\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default myReducer","import logger from \"./middleware/middleware\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport myReducer from './reducers';\r\n\r\n\r\n const store = createStore(\r\n    myReducer,\r\n    applyMiddleware(logger)\r\n); \r\nexport default store;\r\n/* export default function () {\r\n    let store = createStore(persistedReducer,\r\n        applyMiddleware(logger))\r\n    let persistor = persistStore(store)\r\n    return { store, persistor }\r\n} */\r\n/* const store = createStore(persistedReducer ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport const persistor = persistStore(store)\r\nexport default store; */\r\n\r\n//export default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Checkbox, Form, Icon, Input, Button, Row, Col } from 'antd';\r\nimport './Login.css';\r\nimport store from '../../redux/store';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//https://stackoverflow.com/questions/44608627/how-to-persist-jwt-token-throughout-session-until-user-logout\r\nfunction Login(props) {\r\n  const dispatch = useDispatch();\r\n  //const [role, setRole] = useState()\r\n  //const [state, setState] = useState(\"nani\")\r\n\r\n  const isAnyRole = localStorage.getItem(\"role\") === 'USER' || localStorage.getItem(\"role\") === \"ADMIN\";\r\n  //console.log(props);\r\n  const payload = {\r\n    usernameOrEmail: \"user@gmail.com\",\r\n    password: \"1233\"\r\n  };\r\n\r\n  function imaginator(stateOfLife) {\r\n    return {\r\n      type: 0,\r\n      stateOfLife\r\n    };\r\n  }\r\n\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n  useEffect(() => {\r\n    // setRole(store.getState().Role)\r\n    // const sd = isRole ? \"Estas conectado\" : \"No iniciaste sesion\"\r\n    // setState(sd)\r\n  });\r\n  function refreshPage() {\r\n    window.location.reload();\r\n  }\r\n  const fetchData = async () => {\r\n    const response = await axios.post('http://localhost:8080/rrhh-server/api/auth/signin', payload)\r\n    dispatch(imaginator(response.data))\r\n    localStorage.getItem(\"role\")\r\n    response.data.roles.forEach(element => {\r\n      localStorage.setItem(\"role\", element.authority);\r\n    });\r\n    //console.log(localStorage.getItem(\"role\"))\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        payload.usernameOrEmail = values.username;\r\n        payload.password = values.password;\r\n        forceUpdate();\r\n        fetchData();\r\n        setTimeout(function () { window.location.reload(); }, 1200);\r\n        //window.location.reload();\r\n      }\r\n    });\r\n  };\r\n  const { getFieldDecorator } = props.form;\r\n\r\n  const logout = () => {\r\n    localStorage.setItem(\"role\", \"\");\r\n    //forceUpdate();\r\n    window.location.reload();\r\n  }\r\n  return (\r\n\r\n    <div>\r\n      {\r\n        isAnyRole\r\n          ? <Button type=\"danger\" size=\"large\" onClick={logout}>\r\n            Desconectarse\r\n            </Button>\r\n          : <Form onSubmit={handleSubmit} className=\"login-form\">\r\n            <Form.Item>\r\n              {getFieldDecorator('username', {\r\n                rules: [{ required: true, message: 'Ingrese su nombre de usuario!' }],\r\n              })(\r\n                <Input\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Usuario\"\r\n                />,\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator('password', {\r\n                rules: [{ required: true, message: 'Ingrese su contraseña!' }],\r\n              })(\r\n                <Input\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"password\"\r\n                  placeholder=\"Contraseña\"\r\n                />,\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n\r\n              <Row></Row>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                Iniciar\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n      }\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Login);\r\n\r\nexport default WrappedNormalLoginForm\r\n\r\n","import React, { Component } from 'react';\r\nimport { ChromePicker, SketchPicker } from 'react-color';\r\n\r\nconst noop = () => { };\r\n\r\nconst pickers = {\r\n  chrome: ChromePicker,\r\n  sketch: SketchPicker,\r\n};\r\n\r\nexport default class ColorPicker extends Component {\r\n  static defaultProps = {\r\n    onChange: noop,\r\n    onChangeComplete: noop,\r\n    position: 'bottom',\r\n  }\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      displayColorPicker: false,\r\n      color: props.color,\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ color: nextProps.color });\r\n  }\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false });\r\n  };\r\n  handleChange = (color) => {\r\n    this.setState({ color: color.hex });\r\n    this.props.onChange(color.hex, color);\r\n  };\r\n  handleChangeComplete = (color) => {\r\n    this.setState({ color: color.hex });\r\n    this.props.onChangeComplete(color.hex);\r\n  };\r\n  render() {\r\n    const { small, type, position } = this.props;\r\n\r\n    const Picker = pickers[type];\r\n\r\n    const styles = {\r\n      color: {\r\n        width: small ? '16px' : '120px',\r\n        height: small ? '16px' : '24px',\r\n        borderRadius: '2px',\r\n        background: this.state.color,\r\n      },\r\n      swatch: {\r\n        padding: '4px',\r\n        background: '#fff',\r\n        borderRadius: '2px',\r\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n      },\r\n      popover: {\r\n        position: 'absolute',\r\n        zIndex: '2',\r\n      },\r\n      cover: {\r\n        position: 'fixed',\r\n        top: '0px',\r\n        right: '0px',\r\n        bottom: '0px',\r\n        left: '0px',\r\n      },\r\n      wrapper: {\r\n        position: 'inherit',\r\n        zIndex: '100',\r\n      },\r\n    };\r\n\r\n    if (position === 'top') {\r\n      styles.wrapper.transform = 'translateY(-100%)';\r\n      styles.wrapper.paddingBottom = 8;\r\n    }\r\n\r\n    const swatch = (\r\n      <div style={styles.swatch} onClick={this.handleClick}>\r\n        <div style={styles.color} />\r\n      </div>\r\n    );\r\n    const picker = this.state.displayColorPicker ? (\r\n      <div style={styles.popover}>\r\n        <div style={styles.cover} onClick={this.handleClose} />\r\n        <div style={styles.wrapper}>\r\n          <Picker\r\n            {...this.props}\r\n            color={this.state.color}\r\n            onChange={this.handleChange}\r\n            onChangeComplete={this.handleChangeComplete}\r\n          />\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n\r\n    if (position === 'top') {\r\n      return <div>{picker}{swatch}</div>;\r\n    }\r\n    return <div>{swatch}{picker}</div>;\r\n  }\r\n}","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Card,\r\n    message,\r\n    Button,\r\n} from \"antd\";\r\nimport aliyunTheme from '@ant-design/aliyun-theme';\r\nimport darkTheme from '@ant-design/dark-theme';\r\n\r\nimport ColorPicker from \"./index\";\r\n\r\nclass Theme extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let initialValue = {\r\n            /*'@layout-body-background': '#30303d',\r\n             '@primary-color': '#1987a7',\r\n             '@secondary-color': '#0000ff',\r\n             '@text-color': '#fff',\r\n             '@text-color-secondary': '#BFB5B5',\r\n             '@heading-color': '#fa8c16',\r\n             '@btn-primary-bg': '#397dcc' */\r\n            /* '@layout-header-background': '#b36e94', */\r\n        };\r\n        let vars = {};\r\n        try {\r\n            vars = Object.assign({}, aliyunTheme, JSON.parse(localStorage.getItem('app-theme')));\r\n        } finally {\r\n            this.state = { vars, aliyunTheme };\r\n            window.less\r\n                //'@layout-body-background': \"#3ff0303d\", '@primary-color': \"#177b9a\", '@secondary-color': \"#3a3acf\", '@text-color': \"#fff\", '@text-color-secondary': \"#BFB5B5\"\r\n                .modifyVars(vars)\r\n                .then(() => { })\r\n                .catch(error => {\r\n                    message.error(`Failed to update theme`);\r\n                });\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(\"Received values of form: \", values);\r\n            }\r\n        });\r\n    };\r\n    normFile = e => {\r\n        console.log(\"Upload event:\", e);\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n    onChangeComplete = (varName, color) => {\r\n        const { vars } = this.state;\r\n        vars[varName] = color;\r\n        this.setState({ vars });\r\n    };\r\n    handleColorChange = (varname, color) => {\r\n        const { vars } = this.state;\r\n        if (varname) vars[varname] = color;\r\n        console.log(vars);\r\n        window.less\r\n            .modifyVars(vars)\r\n            .then(() => {\r\n                // message.success(`Theme updated successfully`);\r\n                this.setState({ vars });\r\n                localStorage.setItem(\"app-theme\", JSON.stringify(vars));\r\n            })\r\n            .catch(error => {\r\n                message.error(`Failed to update theme`);\r\n            });\r\n    };\r\n\r\n    getColorPicker = (varName) => (\r\n        <Fragment key={varName}>\r\n            <Col xs={20}>{varName}</Col>\r\n            <Col xs={4}>\r\n                <ColorPicker\r\n                    type=\"sketch\"\r\n                    small\r\n                    color={this.state.vars[varName]}\r\n                    position=\"bottom\"\r\n                    presetColors={[\r\n                        '#F5222D',\r\n                        '#FA541C',\r\n                        '#FA8C16',\r\n                        '#FAAD14',\r\n                        '#FADB14',\r\n                        '#A0D911',\r\n                        '#52C41A',\r\n                        '#13C2C2',\r\n                        '#1890FF',\r\n                        '#2F54EB',\r\n                        '#722ED1',\r\n                        '#EB2F96',\r\n                    ]}\r\n                    onChangeComplete={color => this.handleColorChange(varName, color)}\r\n                />\r\n            </Col>\r\n        </Fragment>\r\n    )\r\n    resetTheme = () => {\r\n        localStorage.setItem('app-theme', '{}');\r\n        this.setState({ vars: this.state.initialValue });\r\n        window.less\r\n            .modifyVars(this.state.initialValue)\r\n            .catch(error => {\r\n                message.error(`Failed to reset theme`);\r\n            });\r\n    }\r\n    temelight = () => {\r\n        localStorage.setItem('app-theme', '{}');\r\n        localStorage.setItem('app-theme', JSON.stringify(aliyunTheme));\r\n        this.setState({ vars: aliyunTheme });\r\n        window.less\r\n            .modifyVars(aliyunTheme)\r\n            .catch(error => {\r\n                message.error(`Failed to reset theme`);\r\n            });\r\n    }\r\n    temeDark = () => {\r\n        localStorage.setItem('app-theme', '{}');\r\n        const dar = darkTheme\r\n        let sd = {\r\n            '@text-color': '#fff',\r\n        }\r\n        localStorage.setItem(\"app-theme\", JSON.stringify(darkTheme));\r\n        this.setState({ vars: darkTheme });\r\n        window.less\r\n            .modifyVars(darkTheme)\r\n            .catch(error => {\r\n                message.error(`Failed to reset theme`);\r\n            });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        //const colorPickers = Object.keys(this.state.vars).map(varName => this.getColorPicker(varName));\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 18 }\r\n        };\r\n        return (\r\n            <Row>\r\n                <Col xs={24} sm={6}>\r\n                    <Card title=\"Tema\" style={{ width: 300 }}>\r\n                        <Row>\r\n                            {/*       {colorPickers} */}\r\n                            <Col xs={24} style={{ marginTop: '10px' }}>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={this.resetTheme}>\r\n                                    Reiniciar valores\r\n                                </Button>\r\n                                <br />\r\n                                <br />\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={this.temelight}>\r\n                                    Tema Claro\r\n                                </Button>\r\n                                <br />\r\n                                <br />\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={this.temeDark}>\r\n                                    Tema Oscuro\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nTheme = Form.create()(Theme);\r\nexport default Theme;","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState  } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { PageHeader, Row, Col, Icon, Input, Button, Layout } from 'antd';\r\nimport Particles from 'react-particles-js';\r\n\r\nimport WrappedNormalLoginForm from './components/login/Login';\r\nimport { useSelector, connect } from 'react-redux' \r\nimport store from './redux/store'\r\nimport Theme from './components/ColorPicker/theme'\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n \r\nfunction App() {\r\n  const [data, setData] = useState([]); \r\n  const [role, setRole] = useState([])\r\n  const [state, setState] = useState({ vars: { '@primary-color': '#dddddd' } })\r\n  const isRoleUser = role === 'USER' || role === 'ADMIN';\r\n\r\n  \r\n  useEffect(() => {\r\n    setRole(store.getState().Role)\r\n    let isSubscribed = true\r\n    let reduxsub\r\n    if (isSubscribed) {\r\n    const fetchData = async () => {\r\n      reduxsub = store.subscribe( async () => {\r\n        const response = await axios.get('http://localhost:8080/rrhh-server/api/', {\r\n          headers: {\r\n            Authorization: store.getState().Authorization\r\n          }\r\n        })\r\n        setData(response.data)\r\n      });\r\n    }\r\n      fetchData();\r\n    }\r\n    return () => {\r\n      reduxsub()\r\n      isSubscribed = false\r\n    }\r\n  }, []);\r\n \r\n  return (\r\n <React.Fragment>\r\n      <PageHeader onBack={() => null} backIcon={<Icon type=\"appstore\" />} title=\"RRHH\" subTitle=\"Bienvenido\" />\r\n      {/*  \r\n        isRoleUser\r\n          ? ''\r\n          : 'Inicie sesion para continuar' */}\r\n     \r\n   \r\n    <Row>\r\n      <Col span={1}></Col>\r\n      <Col span={6}>\r\n       <WrappedNormalLoginForm />\r\n        </Col>\r\n      </Row>\r\n      <Row type=\"flex\" justify=\"start\">\r\n        <Col span={6}>\r\n          <br />\r\n          <br />\r\n     {/*      <Theme></Theme> */}\r\n        </Col>\r\n      </Row>\r\n\r\n      <Particles\r\n      /* params={{\r\n        \"particles\": {\r\n          \"line_linked\": {\r\n            \"color\": \"#000\"\r\n          },\r\n          \"number\": {\r\n            \"value\": 90\r\n          },\r\n          \"size\": {\r\n            \"value\": 5\r\n          }\r\n        },\r\n        \"interactivity\": {\r\n          \"events\": {\r\n            \"onhover\": {\r\n              \"enable\": true,\r\n              \"mode\": \"repulse\" //\"grab\" | \"push\" | \"remove\" | \"bubble\" | \"repulse\"\r\n            }\r\n          }\r\n        }\r\n      }} */\r\n        params={{\r\n          \"particles\": {\r\n            \"number\": {\r\n              \"value\": 190,\r\n              \"density\": {\r\n                \"enable\": true,\r\n                \"value_area\": 1500\r\n              }\r\n            },\r\n            \"color\": {\r\n              \"value\": \"#000\"\r\n            },\r\n            \"line_linked\": {\r\n              \"enable\": true,\r\n              \"color\": \"#000\",\r\n              \"opacity\": 0.3\r\n            },\r\n            \"size\": {\r\n              \"value\": 2\r\n            },\r\n            \"opacity\": {\r\n              \"anim\": {\r\n                \"enable\": true,\r\n                \"speed\": 1,\r\n                \"opacity_min\": 0.05\r\n              }\r\n            }\r\n          },\r\n          \"interactivity\": {\r\n            \"events\": {\r\n              \"onclick\": {\r\n                \"enable\": true,\r\n                \"mode\": \"push\"\r\n              }\r\n            },\r\n            \"modes\": {\r\n              \"push\": {\r\n                \"particles_nb\": 1\r\n              }\r\n            }\r\n          },\r\n          \"retina_detect\": true\r\n        }}\r\n        style={{\r\n          width: '100%',\r\n          background: `transparent`\r\n        }}\r\n      />\r\n\r\n     {/*  <Row>\r\n        <Col xs={16}>Primary Color: <Input onChange={onChange} /></Col>\r\n        <Col xs={24}><Button type=\"primary\" onClick={updateVars}>Update Vars</Button></Col>\r\n      </Row>\r\n */}\r\n</React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App \r\n    /*  <div className=\"App\">\r\n        <Button type=\"primary\">Button</Button>\r\n      </div>\r\n      Inicie sesion para continuar\r\n       {data.map(item => (\r\n         <li key={item.id}>\r\n              {item.nombre}\r\n            </li>\r\n            ))} */\r\n  /*  async function fetchData() {\r\n  useEffect(() => {\r\n     const fetchData = async () => {\r\n       const result = await axios(\r\n         'http://localhost:8080/api/',\r\n       );\r\n       setData(result.data);\r\n     };\r\n     fetchData();\r\n   }, []); \r\n  \r\n      /*  axiosInstance.get('http://localhost:8080/api/').then((result) => {\r\n         setData(result.data)\r\n         console.log(result.headers);\r\n       }); */\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { Card, Icon, Avatar, Row, Col, Layout, Form, Input, Button, Radio, Upload, message } from 'antd';\r\nconst { Meta } = Card;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nfunction AdminPanel() {\r\n    return (\r\n        <div>\r\n            <Layout style={{ height: \"calc(100vh - 55px)\" }}>\r\n                <Content style={{ padding: '0 50px' }}>\r\n                    <Row type=\"flex\" gutter={16}>\r\n                        <Col>\r\n                            <h2>Panel de administración</h2>\r\n                            <Link to={`/crearpersona`}>Crear una nueva persona</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Red Design ©2019 Created by Hushino</Footer>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPanel","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport store from '../../redux/store';\r\nimport { Table, Input, Button, Icon, Avatar } from 'antd';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport AdminPanel from '../adminPanel/AdminPanel';\r\n//`${name.data.apellido} ${name.data.nombre}`\r\n\r\nfunction UserPanel() {\r\n    const [state, setState] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    //const [role, setRole] = useState([])\r\n\r\n    let current = 0\r\n    let pageSize = 10\r\n    // eslint-disable-next-line\r\n    let sortField = ''\r\n    let sortOrder = ''\r\n\r\n    const isRoleAdmin = localStorage.getItem(\"role\") === 'ADMIN';\r\n\r\n    const isAnyRole = localStorage.getItem(\"role\") === 'USER' || localStorage.getItem(\"role\") === \"ADMIN\";\r\n\r\n    const handleTableChange = (pagination, filters, sorter) => {\r\n        const pager = { ...loading.pagination };\r\n        pager.current = pagination.current;\r\n        setLoading({\r\n            pagination: pager,\r\n        });\r\n        pageSize = pagination.pageSize\r\n        current = pagination.current - 1\r\n        sortField = sorter.field\r\n        sortOrder = sorter.order\r\n        setLoading({ loading: true });\r\n        fetchData();\r\n        /* fetchData({\r\n            results: pagination.pageSize,\r\n            page: pagination.current,\r\n            sortField: sorter.field,\r\n            sortOrder: sorter.order,\r\n            ...filters,\r\n        }); */\r\n    };\r\n    let integer = parseInt(localStorage.getItem(\"dni\"), 10);\r\n    let integer2 = parseInt(localStorage.getItem(\"legajo\"), 10);\r\n    const urls = {\r\n        nombre: localStorage.getItem(\"nombre\"),\r\n        apellido: localStorage.getItem(\"apellido\"),\r\n        dni: integer,\r\n        legajo: integer2,\r\n    }\r\n\r\n    const fetchData = () => axios.post(`http://localhost:8080/rrhh-server/api/home?page=${current}&size=${pageSize}&sortOrder=${sortOrder}`, urls)\r\n        .then(function (response) {\r\n            /* const asd = filters\r\n            asd.forEach(element => {\r\n                console.log('...filters ' + element);\r\n            }); */\r\n            //console.log('...sortField ' + current); // nombre\r\n            //console.log('...sortOrder ' + pageSize); // ascend descend\r\n\r\n            //if (urls != undefined) {\r\n            /* console.log('response.nombrepersona:  ' + urls.nombre)\r\n            console.log('response.apellidopersona:  ' + urls.apellido) */\r\n            //}\r\n            setLoading({ loading: true });\r\n            const pagination = { ...loading.pagination };\r\n            pagination.total = response.data.totalElements; //-10 bad\r\n            setLoading({\r\n                loading: false,\r\n                data: response.data.content,\r\n                pagination,\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    useEffect(() => {\r\n        fetchData();\r\n        localStorage.setItem(\"nombre\", \"\");\r\n        localStorage.setItem(\"apellido\", \"\");\r\n        localStorage.setItem(\"dni\", \"\");\r\n        localStorage.setItem(\"legajo\", \"\");\r\n    }, []);\r\n\r\n\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        if (dataIndex === \"nombre\") {\r\n            if (selectedKeys !== \"\") {\r\n                localStorage.setItem(\"nombre\", selectedKeys);\r\n            }\r\n        }\r\n        if (dataIndex === \"apellido\") {\r\n            if (selectedKeys !== \"\") {\r\n                localStorage.setItem(\"apellido\", selectedKeys);\r\n            }\r\n        }\r\n        if (dataIndex === \"dni\") {\r\n            if (selectedKeys !== \"\") {\r\n                localStorage.setItem(\"dni\", selectedKeys);\r\n            }\r\n        }\r\n        if (dataIndex === \"legajo\") {\r\n            if (selectedKeys !== \"\") {\r\n                localStorage.setItem(\"legajo\", selectedKeys);\r\n                console.log(\"legajo \" + localStorage.getItem(\"legajo\"))\r\n            }\r\n        }\r\n\r\n        setState({ searchText: selectedKeys[0] });\r\n    };\r\n\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        localStorage.setItem(\"nombre\", \"\");\r\n        localStorage.setItem(\"apellido\", \"\");\r\n        localStorage.setItem(\"dni\", \"\");\r\n        localStorage.setItem(\"legajo\", \"\");\r\n        setState({ searchText: '' });\r\n    };\r\n    let searchInput = null;\r\n    let getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        searchInput = node;\r\n                    }}\r\n                    placeholder={`Buscar ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    icon=\"search\"\r\n                    size=\"small\"\r\n                    style={{ width: 90, marginRight: 8 }}\r\n                >\r\n                    Buscar\r\n        </Button>\r\n                <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                    Reiniciar\r\n        </Button>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => searchInput.select());\r\n            }\r\n        },\r\n        render: text => (\r\n            <Highlighter\r\n                highlightStyle={{ /* backgroundColor: '#ffc069', */ padding: 0 }}\r\n                searchWords={[state.searchText]}\r\n                autoEscape\r\n                textToHighlight={\r\n                    text.toString()\r\n                }\r\n            />\r\n        ),\r\n    });\r\n    const columns = [\r\n        {\r\n            title: 'Nombre',\r\n            dataIndex: 'nombre',\r\n            sorter: true,\r\n            render: data => data,\r\n            width: '20%',\r\n            ...getColumnSearchProps('nombre'),\r\n        },\r\n        {\r\n            title: 'Apellido',\r\n            dataIndex: 'apellido',\r\n            width: '20%',\r\n            ...getColumnSearchProps('apellido'),\r\n        },\r\n        {\r\n            title: 'Dni',\r\n            dataIndex: 'dni',\r\n            width: '20%',\r\n            ...getColumnSearchProps('dni'),\r\n        },\r\n        {\r\n            title: 'Legajo',\r\n            dataIndex: 'legajo',\r\n            width: '20%',\r\n            ...getColumnSearchProps('legajo'),\r\n        },\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n            width: '20%',\r\n            ...getColumnSearchProps('id'),\r\n        },\r\n        {\r\n            title: 'Accion',\r\n            key: 'action',\r\n            dataIndex: 'id',\r\n            render: (dataIndex) => <Link to={`/viewpersona/${dataIndex}`}>Ver</Link>,\r\n        },\r\n        isRoleAdmin ?\r\n            {\r\n                title: 'Accion',\r\n                key: 'action2',\r\n                dataIndex: 'id',\r\n                render: (dataIndex) => <Link to={`/${dataIndex}/agregarlicencia/`}>Editar</Link>\r\n\r\n            } : {}\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Panel de Usuario Autentificado</h1>\r\n            <Table\r\n                columns={columns}\r\n                rowKey={record => record.id}\r\n                dataSource={loading.data}\r\n                pagination={loading.pagination}\r\n                loading={loading.loading}\r\n                onChange={handleTableChange}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPanel","import React from 'react';\r\n\r\nfunction NoPageFound() {\r\n    return (\r\n        <div><h1>NoPageFound</h1></div>\r\n    )\r\n}\r\n\r\nexport default NoPageFound","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useCallback, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { Card, Icon, Avatar, Row, Col, Layout, Button, Descriptions, Radio } from 'antd';\r\nimport './style.css'\r\nimport * as jsPDF from 'jspdf'\r\n\r\nconst { Meta } = Card;\r\nconst { Footer, Content } = Layout;\r\n\r\nfunction Viewpersona(props) {\r\n    const [data, setData] = useState(\r\n        []\r\n\r\n    )\r\n    const [state, setState] = useState('small')\r\n    const { dataIndex } = props.match.params\r\n    //console.log(dataIndex)\r\n    const isRoleAdmin = localStorage.getItem(\"role\") === 'ADMIN';\r\n\r\n    const isAnyRole = localStorage.getItem(\"role\") === 'USER' || localStorage.getItem(\"role\") === \"ADMIN\";\r\n    const onChange = e => {\r\n        console.log('size checked', e.target.value);\r\n        setState({\r\n            size: e.target.value,\r\n        });\r\n    };\r\n    const fetchData = () => axios.get(`http://localhost:8080/rrhh-server/api/viewpersona/${dataIndex}`)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n            setData(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        /*   var doc = new jsPDF({\r\n              orientation: 'landscape',\r\n          })\r\n  \r\n          doc.text('Hello world!', 10, 10)\r\n          doc.save('a4.pdf') */\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    /* useEffect(() => {\r\n      }, []); */\r\n\r\n    let licenciasget = data.licencias && data.licencias.length > 0 ?\r\n        data.licencias.map(licencias2 =>\r\n            <span key={licencias2.id}>\r\n                Fecha de Licencia:  {licencias2.fechaLicencia}\r\n            </span>\r\n        ) : <span>...</span>;\r\n    let penasDisciplinariasSufridasget = data.penasDisciplinariasSufridas && data.penasDisciplinariasSufridas.length > 0 ?\r\n        data.penasDisciplinariasSufridas.map(penasDisciplinariasSufridas2 =>\r\n            <span key={penasDisciplinariasSufridas2.id}>\r\n                Fecha: {penasDisciplinariasSufridas2.fecha}\r\n                <br />\r\n                Expediente: {penasDisciplinariasSufridas2.expediente}\r\n                <br />\r\n                Referencias: {penasDisciplinariasSufridas2.referencias}\r\n            </span>\r\n        ) : <span>...</span>;\r\n    let otrosServiciosPrestadosget = data.otrosServiciosPrestados && data.otrosServiciosPrestados.length > 0 ?\r\n        data.otrosServiciosPrestados.map(otrosServiciosPrestados2 =>\r\n            <span key={otrosServiciosPrestados2.id}>\r\n                Fecha: {otrosServiciosPrestados2.fecha}\r\n                <br />\r\n                Referencias:{otrosServiciosPrestados2.referencias}\r\n            </span>\r\n        ) : <span>...</span>;\r\n\r\n    let garantiasget = data.garantias && data.garantias.length > 0 ?\r\n        data.garantias.map(garantias2 =>\r\n            <span key={garantias2.id}>\r\n                Garantia:  {garantias2.garantia}\r\n                <br />\r\n                Presentada Fecha: {garantias2.presentadaFecha}\r\n                <br />\r\n                Observaciones: {garantias2.observaciones}\r\n            </span>\r\n        ) : <span>...</span>;\r\n\r\n    let embargosget = data.embargos && data.embargos.length > 0 ?\r\n        data.embargos.map(embargos2 =>\r\n            <span key={embargos2.id}>\r\n                Fecha: {embargos2.fecha}\r\n                <br />\r\n                Juzgado:  {embargos2.juzgado}\r\n                <br />\r\n                Acreedor: {embargos2.acreedor}\r\n                <br />\r\n                Cantidad: {embargos2.cantidad}\r\n                <br />\r\n                Expediente: {embargos2.expediente}\r\n                <br />\r\n                Fianza o deuda propia: {embargos2.fianzaODeudaPropia}\r\n                <br />\r\n                Origen de la Deuda: {embargos2.origenDeLaDeuda}\r\n                <br />\r\n                Observaciones:{embargos2.observaciones}\r\n                <br />\r\n                Levantada: {embargos2.levantada}\r\n            </span>\r\n        ) : <span>...</span>;\r\n\r\n    let conceptoConocimientosEspecialesClasificacionPremios = data.conceptoConocimientosEspecialesClasificacionPremios && data.conceptoConocimientosEspecialesClasificacionPremios.length > 0 ?\r\n        data.conceptoConocimientosEspecialesClasificacionPremios.map(conceptoConocimientosEspecialesClasificacionPremios2 =>\r\n            <span key={conceptoConocimientosEspecialesClasificacionPremios2.id}>\r\n                fecha:{conceptoConocimientosEspecialesClasificacionPremios2.fecha}\r\n                <div></div>\r\n                referencias:{conceptoConocimientosEspecialesClasificacionPremios2.referencias}\r\n            </span>\r\n        ) : <span>...</span>;\r\n\r\n    let usuriosmod = data.detailUserTracks && data.detailUserTracks.length > 0 ?\r\n        data.detailUserTracks.map(detailUserTracks2 =>\r\n            <span key={detailUserTracks2.id}>\r\n                {detailUserTracks2.name}\r\n            </span>\r\n        ) : <span>...</span>;\r\n\r\n\r\n    const eliminar = () => axios.delete(`http://localhost:8080/rrhh-server/api/delete/${dataIndex}`)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n\r\n    const activateLasers = () => {\r\n        var doc = new jsPDF({\r\n            /*    orientation: 'landscape' */\r\n        })\r\n        doc.text(\"Direccion de Recursos Humanos de la municipalidad de Clorinda\", 20, 10)\r\n        doc.text(\"Nombre: \" + data.nombre, 10, 20)\r\n        doc.text(\"Apellido: \" + data.apellido, 10, 30)\r\n        doc.text(\"Legajo: \" + data.legajo, 10, 40)\r\n        doc.text(\"Apodo: \" + data.apodo, 10, 50)\r\n        doc.text(\"Cuit: \" + data.cuit, 10, 60)\r\n        doc.text(\"Soltero: \" + data.soltero, 10, 70)\r\n        doc.text(\"Casado: \" + data.casado, 10, 80)\r\n        doc.text(\"Conviviente: \" + data.conviviente, 10, 90)\r\n        doc.text(\"Viudo: \" + data.viudo, 10, 100)\r\n        doc.text(\"Domicilio: \" + data.domicilio, 10, 110)\r\n        doc.text(\"Calle: \" + data.calle, 10, 120)\r\n        doc.text(\"Numero: \" + data.numero, 10, 130)\r\n        doc.text(\"Telefono fijo: \" + data.telefonofijo, 10, 140)\r\n        doc.text(\"Numero de celular: \" + data.numerodecelular, 10, 150)\r\n        doc.text(\"Oficio/Profecion: \" + data.oficioprofecion, 10, 160)\r\n        doc.text(\"Nivel de estudios: \" + data.niveldeestudios, 10, 170)\r\n        doc.text(\"Grupo sanguineo: \" + data.gruposanguineo, 10, 180)\r\n        doc.text(\"Diabetes: \" + data.diabetes, 10, 190)\r\n        doc.text(\"Hipertension: \" + data.hipertension, 10, 200)\r\n        doc.text(\"Alergias: \" + data.alergias, 10, 210)\r\n        doc.text(\"Asma: \" + data.asma, 10, 220)\r\n        doc.text(\"Fechadeingreso: \" + data.fechadeingreso, 10, 230)\r\n        doc.text(\"Resolucion: \" + data.resolucion, 10, 240)\r\n        doc.text(\"Categoria: \" + data.categoria, 10, 250)\r\n        doc.text(\"Item: \" + data.item, 10, 260)\r\n        doc.text(\"Planta: \" + data.planta, 10, 270)\r\n        doc.text(\"Direccion: \" + data.direccion, 10, 280)\r\n        doc.text(\"Años: \" + data.annos, 10, 290)\r\n        const ads = doc.addPage()\r\n        ads.text(\"Meses: \" + data.meses, 10, 10)\r\n        ads.text(\"Familiar a cargo nombre: \" + data.familiaracargonombre, 10, 20)\r\n        ads.text(\"Familiar a cargo dni: \" + data.familiaracargodni, 10, 30)\r\n        ads.text(\"Familiar a cargo nombre 2: \" + data.familiaracargonombre2, 10, 40)\r\n        ads.text(\"Familiar a cargo dni 2: \" + data.familiaracargodni2, 10, 340)\r\n        ads.text(\"Realizo computo de servicios: \" + data.realizocomputodeservicios, 10, 50)\r\n        ads.text(\"Posee conocimiento en maquinas viales: \" + data.poseeconocimientoenmaquinasviales, 10, 60)\r\n        ads.text(\"En caso emergencia celular: \" + data.casoemergenciacelular, 10, 70)\r\n        ads.text(\"En caso emergencia celular 2: \" + data.casoemergenciacelular2, 10, 80)\r\n        ads.text(\"En caso emergencia fijo: \" + data.casoemergenciafijo, 10, 90)\r\n        ads.text(\"En caso emergencia fijo2: \" + data.casoemergenciafijo2, 10, 100)\r\n        ads.text(\"En caso emergencia nombre: \" + data.casoemergencianombre, 10, 110)\r\n        ads.text(\"En caso emergencia nombre 2: \" + data.casoemergencianombre2, 10, 120)\r\n        doc.save('a4.pdf')\r\n    }\r\n    return (\r\n        <Layout style={{ /* background: \"white\", */ }}>\r\n            <Content style={{ padding: '0 50px' }}>\r\n                <Row type=\"flex\" gutter={16}>\r\n                    <Col>\r\n                        <div style={{ marginTop: 12 }}>\r\n                            <Radio.Group onChange={onChange} value={state.size}>\r\n                                <Radio value=\"default\">Por defecto</Radio>\r\n                                <Radio value=\"middle\">Medio</Radio>\r\n                                <Radio value=\"small\">Compacto</Radio>\r\n                            </Radio.Group>\r\n                            <div>\r\n                                <br />\r\n                                <Button onClick={activateLasers} type=\"primary\">Desacargar PDF</Button>\r\n                            </div>\r\n                            <br />\r\n                            <br />\r\n                            <Avatar shape=\"square\" icon=\"user\" size={164} src={`http://localhost:3003/uploads/` + data.foto} />\r\n                            <Descriptions bordered title=\"Informacion de una persona\" size={state.size}>\r\n                                <Descriptions.Item label=\"Nombre\">{data.nombre}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Apellido\">{data.apellido}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Legajo\">{data.legajo}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Apodo\">{data.apodo}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Cuit\">{data.cuit}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Soltero\">{data.soltero}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Casado\">{data.casado}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Conviviente\">{data.conviviente}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Viudo\">{data.viudo}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Domicilio\">{data.domicilio}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Lugar\">{data.lugar}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Calle\">{data.calle}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Numero de calle\">{data.numero}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Telefono fijo\">{data.telefonofijo}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Numero de celular\">{data.numerodecelular}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Oficio/Profecion\">{data.oficioprofecion}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Nivel de estudios\">{data.niveldeestudios}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Grupo sanguineo\">{data.gruposanguineo}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Diabetes\">{data.diabetes}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Hipertension\">{data.hipertension}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Alergias\">{data.alergias}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Asma\">{data.asma}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Otros\">{data.otros}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Fecha de Ingreso\">{data.fechadeingreso}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Resolucion\">{data.resolucion}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Categoria\">{data.categoria}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Item\">{data.item}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Planta\">{data.planta}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Direccion\">{data.direccion}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Años\">{data.annos}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Meses\">{data.meses}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Familiar acargo nombre\">{data.familiaracargonombre2}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Familiar acargo nombre 2\">{data.familiaracargonombre}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Familiar acargo DNI\">{data.familiaracargodni}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Familiar acargo DNI 2\">{data.familiaracargodni2}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Realizo computo de servicios\">{data.realizocomputodeservicios}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Posee conocimientos en maquinas viales\">{data.poseeconocimientoenmaquinasviales}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"En caso de emergencia celular\">{data.casoemergenciacelular}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"En caso de emergencia celular 2\">{data.casoemergenciacelular2}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"En caso de emergencia telefono fijo\">{data.casoemergenciafijo}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"En caso de emergencia telefono fijo\">{data.casoemergenciafijo2}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"En caso emergencia nombre\">{data.casoemergencianombre}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"En caso emergencia nombre 2\">{data.casoemergencianombre2}</Descriptions.Item>\r\n\r\n\r\n                                <Descriptions.Item label=\"Licencia\">\r\n                                    {licenciasget}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Concepto Conocimientos Especiales Clasificacion Premios\">\r\n                                    {conceptoConocimientosEspecialesClasificacionPremios}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Embargo\">\r\n                                    {embargosget}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Garantia\">\r\n                                    {garantiasget}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Otros Servicios Prestados\">\r\n                                    {otrosServiciosPrestadosget}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Penas Disciplinarias Sufridas\">\r\n                                    {penasDisciplinariasSufridasget}\r\n                                </Descriptions.Item>\r\n                            </Descriptions>\r\n                            <br />\r\n                            <br />\r\n                            {\r\n                                isRoleAdmin\r\n                                    ?\r\n                                    <Descriptions title=\"Accion\" size={state.size} >\r\n                                        <Descriptions.Item label=\"Editar\">\r\n                                            <Link to={`/${dataIndex}/editar`}>\r\n\r\n                                                <Button type=\"primary\"> <Icon type=\"edit\" key=\"edit\" /> </Button>\r\n                                            </Link>\r\n                                        </Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Eliminar\">\r\n\r\n                                            <Button type=\"primary\" onClick={function (e) { eliminar() }}>  <Icon type=\"delete\" key=\"delete\" /> </Button>\r\n                                        </Descriptions.Item>\r\n                                    </Descriptions>\r\n                                    : \"\"}\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" gutter={16}>\r\n                    <Col>\r\n                        <div>\r\n                            Usuarios que han echo cambios aqui:\r\n                        </div>\r\n                        <h4>{usuriosmod}</h4>\r\n                    </Col>\r\n                </Row>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Red Design ©2019 Created by Hushino</Footer>\r\n        </Layout>\r\n    )\r\n\r\n}\r\nexport default Viewpersona","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { Card, Icon, Avatar, Row, Col, Layout, Form, Input, Button, Radio, Upload, message } from 'antd';\r\nimport axios from 'axios';\r\nconst { Meta } = Card;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n//console.log(props.personaid) \r\nfunction Editarlicencia(props) {\r\n    let truedata = null;\r\n    let nombreusuario = \"null\"\r\n    const [data, setData] = useState([])\r\n    const personaidd = props.personaid;\r\n    const postData = (values) => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${personaidd}/updatelicencia/${data.id}`, values)\r\n        .then(function (response) {\r\n            //console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    useLayoutEffect(() => {\r\n        //console.log(personaidd);\r\n        const getData = () => axios.get(`http://localhost:8080/rrhh-server/api/licencia/${personaidd}`)\r\n            .then(function (response) {\r\n                //console.log(\"datos de licencia \", response.data)\r\n                setData(response.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        getData();\r\n\r\n    }, [personaidd])\r\n\r\n\r\n    useEffect(() => {\r\n        //nombreusuario = localStorage.getItem(\"nombreusuario\");\r\n        console.log(localStorage.getItem(\"nombreusuario\"))\r\n        props.form.setFieldsValue({\r\n            fechaLicencia: data.fechaLicencia,\r\n            referencias: data.referencias,\r\n            numeroDeDias: data.numeroDeDias,\r\n            observaciones: data.observaciones,\r\n            usuariosMod: localStorage.getItem(\"nombreusuario\")\r\n        });\r\n        //console.log(data.foto)\r\n\r\n    }, [data]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                //console.log(values.nombre)//ok\r\n                truedata = values\r\n                setData(values)\r\n                //console.log(uploadImage)\r\n                postData(truedata)\r\n            }\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    return (\r\n        <div>\r\n            <Col>\r\n                <h2>Editar licencia actual</h2>\r\n                <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n                    <Form.Item label=\"fechaLicencia\">\r\n                        {getFieldDecorator('fechaLicencia', {\r\n                            rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                        })(\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"fechaLicencia\"\r\n                                placeholder={data.fechaLicencia}\r\n                                setFieldsValue={data.fechaLicencia}\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"referencias\">\r\n                        {getFieldDecorator('referencias', {\r\n                            rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                        })(\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder={data.apellido}\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"numeroDeDias\">\r\n                        {getFieldDecorator('numeroDeDias', {\r\n                            rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                        })(\r\n                            <Input\r\n                                type=\"number\"\r\n                                placeholder={data.legajo}\r\n                                setFieldsValue={data.legajo}\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"observaciones\">\r\n                        {getFieldDecorator('observaciones', {\r\n                            rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                        })(\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder={data.observaciones}\r\n                                setFieldsValue={data.observaciones}\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"\">\r\n                        {getFieldDecorator('usuariosMod')(\r\n                            <Input\r\n                                type=\"hidden\"\r\n                                placeholder=\"{data.usuario}\"\r\n                                setFieldsValue={localStorage.getItem(\"nombreusuario\")}\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item>\r\n                        <Row></Row>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                            Enviar Actualizacion\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </div>\r\n    )\r\n}\r\nconst WrappedEditarLicenciaForm = Form.create({ name: 'editarPersona' })(Editarlicencia);\r\nexport default WrappedEditarLicenciaForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\nfunction EditarAltasAscensosBajas(props) {\r\n    let truedata = null;\r\n    const [data, setData] = useState([])\r\n    let ide\r\n    const personaidd = props.personaid;\r\n    const postData = (values) => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${personaidd}/updateAltasAscensosBajas/${data.id}`, values)\r\n        .then(function (response) {\r\n            //console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    useLayoutEffect(() => {\r\n        console.log(personaidd);\r\n        const getData = () => axios.get(`http://localhost:8080/rrhh-server/api/altasAscensosBajas/${personaidd}`)\r\n            .then(function (response) {\r\n                ide = response.data\r\n                setData(response.data)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        getData();\r\n\r\n    }, [personaidd])\r\n\r\n    useEffect(() => {\r\n\r\n        props.form.setFieldsValue({\r\n            cargo: data.cargo,\r\n            fecha: data.fecha,\r\n            expediente: data.expediente,\r\n            observaciones: data.observaciones,\r\n            prestaservicioen: data.prestaservicioen\r\n        });\r\n\r\n    }, [data]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                truedata = values\r\n                setData(values)\r\n                postData(truedata)\r\n            }\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Cargo\" >\r\n                {getFieldDecorator('cargo', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        name=\"cargo\"\r\n                        placeholder={data.cargo}\r\n                        setFieldsValue={data.cargo}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('fecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder={data.fecha}\r\n                        setFieldsValue={data.fecha}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Observaciones\">\r\n                {getFieldDecorator('observaciones', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder={data.expediente}\r\n                        setFieldsValue={data.expediente}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Expediente\">\r\n                {getFieldDecorator('expediente', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder={data.observaciones}\r\n                        setFieldsValue={data.observaciones}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Presta servicio en:\">\r\n                {getFieldDecorator('prestaservicioen', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder={data.prestaservicioen}\r\n                        setFieldsValue={data.prestaservicioen}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst WrappedEditarAltasAscensosBajasForm = Form.create({ name: 'editarAltasAscensosBajas' })(EditarAltasAscensosBajas);\r\nexport default WrappedEditarAltasAscensosBajasForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport { Row, Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nconst { TextArea } = Input;\r\nfunction ConceptoConocimientosEspecialesClasificacionPremios(props) {\r\n\r\n    let truedata = null;\r\n    let idManyside = null\r\n    const refContainer = useRef(null);\r\n    const [data, setData] = useState([])\r\n    const personaidd = props.personaid;\r\n    const postData = (values) => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${personaidd}/conceptoConocimientosEspecialesClasificacionPremios/${refContainer.current}`, values)\r\n        .then(function (response) {\r\n            //console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    useLayoutEffect(() => {\r\n        //console.log(personaidd);\r\n        const getData = () => axios.get(`http://localhost:8080/rrhh-server/api/conceptoConocimientosEspecialesClasificacionPremios/${personaidd}`)\r\n            .then(function (response) {\r\n                //idManyside = response.data.id\r\n                refContainer.current = response.data.id\r\n                setData(response.data)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        getData();\r\n\r\n    }, [personaidd])\r\n\r\n    useEffect(() => {\r\n        props.form.setFieldsValue({\r\n            referencias: data.referencias,\r\n            fecha: data.fecha,\r\n        });\r\n\r\n    }, [data]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                truedata = values\r\n                setData(values)\r\n                postData(truedata)\r\n            }\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Referencias\" >\r\n                {getFieldDecorator('referencias', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <TextArea rows={4}\r\n                        name=\"referencias\"\r\n                        placeholder={data.referencias}\r\n                        setFieldsValue={data.referencias}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('fecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder={data.fecha}\r\n                        setFieldsValue={data.fecha}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n            </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nconst WrappedEditarConceptoConocimientosEspecialesClasificacionPremiosForm = Form.create({ name: 'EditarConceptoConocimientosEspecialesClasificacionPremios' })(ConceptoConocimientosEspecialesClasificacionPremios);\r\nexport default WrappedEditarConceptoConocimientosEspecialesClasificacionPremiosForm\r\n\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\n\r\nfunction EditarEmbargo(props) {\r\n    let truedata = null;\r\n    const [data, setData] = useState([])\r\n    const personaidd = props.personaid;\r\n    const postData = (values) => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${personaidd}/updateembargos/${data.id}`, values)\r\n        .then(function (response) {\r\n            //console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    useLayoutEffect(() => {\r\n        console.log(personaidd);\r\n        const getData = () => axios.get(`http://localhost:8080/rrhh-server/api/embargos/${personaidd}`)\r\n            .then(function (response) {\r\n                setData(response.data)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        getData();\r\n\r\n    }, [personaidd])\r\n\r\n    useEffect(() => {\r\n\r\n        props.form.setFieldsValue({\r\n            juzgado: data.juzgado,\r\n            fecha: data.fecha,\r\n            expediente: data.expediente,\r\n            observaciones: data.observaciones,\r\n            acreedor: data.acreedor,\r\n            cantidad: data.cantidad,\r\n            fianzaODeudaPropia: data.fianzaODeudaPropia,\r\n            origenDeLaDeuda: data.origenDeLaDeuda,\r\n            levantada: data.levantada,\r\n        });\r\n\r\n    }, [data]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                truedata = values\r\n                setData(values)\r\n                postData(truedata)\r\n            }\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Juzgado\" >\r\n                {getFieldDecorator('juzgado', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        name=\"juzgado\"\r\n                        placeholder={data.juzgado}\r\n                        setFieldsValue={data.juzgado}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('fecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder={data.fecha}\r\n                        setFieldsValue={data.fecha}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Observaciones\">\r\n                {getFieldDecorator('observaciones', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder={data.observaciones}\r\n                        setFieldsValue={data.observaciones}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Expediente\">\r\n                {getFieldDecorator('expediente', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder={data.expediente}\r\n                        setFieldsValue={data.expediente}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Acreedor\">\r\n                {getFieldDecorator('acreedor', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder={data.acreedor}\r\n                        setFieldsValue={data.acreedor}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Cantidad\">\r\n                {getFieldDecorator('cantidad', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder={data.observaciones}\r\n                        setFieldsValue={data.observaciones}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"FianzaODeudaPropia\">\r\n                {getFieldDecorator('fianzaODeudaPropia', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder={data.fianzaODeudaPropia}\r\n                        setFieldsValue={data.fianzaODeudaPropia}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"OrigenDeLaDeuda\">\r\n                {getFieldDecorator('origenDeLaDeuda', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder={data.origenDeLaDeuda}\r\n                        setFieldsValue={data.origenDeLaDeuda}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Levantada\">\r\n                {getFieldDecorator('levantada', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder={data.levantada}\r\n                        setFieldsValue={data.levantada}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\n\r\nconst WrappedEditarEmbargoForm = Form.create({ name: 'editarEmbargoForm' })(EditarEmbargo);\r\nexport default WrappedEditarEmbargoForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\n\r\nfunction EditarGarantia(props) {\r\n    let truedata = null;\r\n    const [data, setData] = useState([])\r\n    const personaidd = props.personaid;\r\n    const postData = (values) => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${personaidd}/updategarantia/${data.id}`, values)\r\n        .then(function (response) {\r\n            //console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    useLayoutEffect(() => {\r\n        console.log(personaidd);\r\n        const getData = () => axios.get(`http://localhost:8080/rrhh-server/api/garantia/${personaidd}`)\r\n            .then(function (response) {\r\n                setData(response.data)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        getData();\r\n\r\n    }, [personaidd])\r\n\r\n    useEffect(() => {\r\n        props.form.setFieldsValue({\r\n            garantia: data.garantia,\r\n            presentadaFecha: data.presentadaFecha,\r\n            observaciones: data.observaciones,\r\n        });\r\n\r\n    }, [data]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                truedata = values\r\n                setData(values)\r\n                postData(truedata)\r\n            }\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Garantia\" >\r\n                {getFieldDecorator('garantia', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        name=\"garantia\"\r\n                        placeholder={data.garantia}\r\n                        setFieldsValue={data.garantia}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Presentada Fecha\">\r\n                {getFieldDecorator('presentadaFecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder={data.presentadaFecha}\r\n                        setFieldsValue={data.presentadaFecha}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Observaciones\">\r\n                {getFieldDecorator('observaciones', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder={data.observaciones}\r\n                        setFieldsValue={data.observaciones}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst WrappedEditarGarantiaForm = Form.create({ name: 'editarGarantia' })(EditarGarantia);\r\nexport default WrappedEditarGarantiaForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\n\r\nfunction EditarOtrosServiciosPrestados(props) {\r\n    \r\n    let truedata = null;\r\n    const [data, setData] = useState([])\r\n    const personaidd = props.personaid;\r\n    const postData = (values) => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${personaidd}/updateOtrosServiciosPrestados/${data.id}`, values)\r\n        .then(function (response) {\r\n            //console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    useLayoutEffect(() => {\r\n        console.log(personaidd);\r\n        const getData = () => axios.get(`http://localhost:8080/rrhh-server/api/otrosServiciosPrestados/${personaidd}`)\r\n            .then(function (response) {\r\n                setData(response.data)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        getData();\r\n\r\n    }, [personaidd])\r\n\r\n    useEffect(() => {\r\n        props.form.setFieldsValue({\r\n            referencias: data.referencias,\r\n            fecha: data.fecha,\r\n        });\r\n\r\n    }, [data]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                truedata = values\r\n                setData(values)\r\n                postData(truedata)\r\n            }\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Referencias\" >\r\n                {getFieldDecorator('Referencias', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        name=\"referencias\"\r\n                        placeholder={data.referencias}\r\n                        setFieldsValue={data.referencias}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('fecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder={data.fecha}\r\n                        setFieldsValue={data.fecha}\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst WrappedEditarOtrosServiciosPrestadosForm = Form.create({ name: 'editarOtrosServiciosPrestados' })(EditarOtrosServiciosPrestados);\r\nexport default WrappedEditarOtrosServiciosPrestadosForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\nfunction EditarPenasDisciplinariasSufridas(props){\r\n\r\nlet truedata = null;\r\nconst [data, setData] = useState([])\r\nconst personaidd = props.personaid;\r\nconst postData = (values) => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${personaidd}/penasDisciplinariasSufridas/${data.id}`, values)\r\n    .then(function (response) {\r\n        //console.log(response.data)\r\n    })\r\n    .catch(function (error) {\r\n        console.log(error);\r\n    })\r\nuseLayoutEffect(() => {\r\n    console.log(personaidd);\r\n    const getData = () => axios.get(`http://localhost:8080/rrhh-server/api/penasDisciplinariasSufridas/${personaidd}`)\r\n        .then(function (response) {\r\n            setData(response.data)\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    getData();\r\n\r\n}, [personaidd])\r\n\r\nuseEffect(() => {\r\n    props.form.setFieldsValue({\r\n        expediente: data.expediente,\r\n        fecha: data.fecha,\r\n        referencias: data.observaciones,\r\n    });\r\n\r\n}, [data]);\r\n\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n            truedata = values\r\n            setData(values)\r\n            postData(truedata)\r\n        }\r\n    });\r\n};\r\n\r\nconst { getFieldDecorator } = props.form;\r\n\r\nreturn (\r\n    <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n        <Form.Item label=\"Expediente\" >\r\n            {getFieldDecorator('expediente', {\r\n                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n            })(\r\n                <Input\r\n                    type=\"number\"\r\n                    name=\"garantia\"\r\n                    placeholder={data.expediente}\r\n                    setFieldsValue={data.expediente}\r\n                />,\r\n            )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Fecha\">\r\n            {getFieldDecorator('fecha', {\r\n                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n            })(\r\n                <Input\r\n                    type=\"date\"\r\n                    placeholder={data.fecha}\r\n                    setFieldsValue={data.fecha}\r\n                />,\r\n            )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Referencias\">\r\n            {getFieldDecorator('referencias', {\r\n                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n            })(\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder={data.referencias}\r\n                    setFieldsValue={data.referencias}\r\n                />,\r\n            )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <Row></Row>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                Enviar\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n)\r\n}\r\n\r\nconst WrappedEditarPenasDisciplinariasSufridasForm = Form.create({ name: 'editarPenasDisciplinariasSufridas' })(EditarPenasDisciplinariasSufridas);\r\nexport default WrappedEditarPenasDisciplinariasSufridasForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Tabs, Card, Icon, Avatar, Row, Col, Layout, Form, Input, Button, Radio, Upload, message } from 'antd';\r\nimport WrappedEditarLicenciaForm from './manyside/Editarlicencia'\r\nimport WrappedEditarAltasAscensosBajasForm from './manyside/altasAscensosBajas/EditarAltasAscensosBajas'\r\nimport WrappedEditarConceptoConocimientosEspecialesClasificacionPremiosForm from './manyside/ConceptoConocimientosEspecialesClasificacionPremios/EditarConceptoConocimientosEspecialesClasificacionPremios'\r\nimport WrappedEditarEmbargoForm from './manyside/embargos/EditarEmbargo'\r\nimport WrappedEditarGarantiaForm from './manyside/garantia/EditarGarantia'\r\nimport WrappedEditarOtrosServiciosPrestadosForm from './manyside/otrosServiciosPrestados/EditarOtrosServiciosPrestados'\r\nimport WrappedEditarPenasDisciplinariasSufridasForm from './manyside/penasDisciplinariasSufridas/EditarPenasDisciplinariasSufridas'\r\nconst { Meta } = Card;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst { TabPane } = Tabs;\r\n\r\nfunction Editarpersona(props) {\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    const [uploadImage, setUploadImage] = useState({})\r\n\r\n    const [imagestate, setImagestate] = useState({ loading: false })\r\n\r\n    const { dataIndex } = props.match.params\r\n\r\n    let truedata = null;\r\n\r\n    const reader = new FileReader();\r\n    //console.log(dataIndex);\r\n    function getBase64(img, callback) {\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('Solo puedes subir archivos JPG/PNG !');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('La imagen debe pesar menos de 2MB!');\r\n        }\r\n\r\n        return isJpgOrPng && isLt2M;\r\n    }\r\n\r\n    const postData = (values) => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${dataIndex}`, values)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n\r\n    const postImage = (bodyFormData) => axios.post(\"http://localhost:3003/upload\", bodyFormData)\r\n        .then(function (response) {\r\n            //console.log(response.data.filename)\r\n            if (response.data.filename !== undefined) {\r\n                data.foto = response.data.filename\r\n            }\r\n            data.foto = response.data.filename\r\n            postData(truedata)\r\n        })\r\n        .catch(function (response) {\r\n            console.log(response);\r\n        })/* .then(() => {\r\n            postData(data)\r\n        }) */\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        const getData = () => axios.get(`http://localhost:8080/rrhh-server/api/viewpersona/${dataIndex}`)\r\n            .then(function (response) {\r\n                //console.log(response.data)\r\n                setData(response.data)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        getData();\r\n\r\n    }, [dataIndex])\r\n\r\n    useEffect(() => {\r\n\r\n        props.form.setFieldsValue({\r\n            nombre: data.nombre,\r\n            apellido: data.apellido,\r\n            legajo: data.legajo,\r\n            dni: data.dni,\r\n            foto: data.foto,\r\n            //fecha: data.fecha,\r\n            usuariosModPersona: localStorage.getItem(\"nombreusuario\"),\r\n            apodo: data.apodo,\r\n            cuit: data.cuit,\r\n            soltero: data.soltero,\r\n            casado: data.casado,\r\n            conviviente: data.conviviente,\r\n            viudo: data.viudo,\r\n            domicilio: data.domicilio,\r\n            lugar: data.lugar,\r\n            calle: data.calle,\r\n            numero: data.numero,\r\n            telefonofijo: data.telefonofijo,\r\n            numerodecelular: data.numerodecelular,\r\n            oficioprofecion: data.oficioprofecion,\r\n            niveldeestudios: data.niveldeestudios,\r\n            gruposanguineo: data.gruposanguineo,\r\n            donante: data.donante,\r\n            diabetes: data.diabetes,\r\n            hipertension: data.hipertension,\r\n            alergias: data.alergias,\r\n            asma: data.asma,\r\n            otros: data.otros,\r\n            fechadeingreso: data.fechadeingreso,\r\n            resolucion: data.resolucion,\r\n            categoria: data.categoria,\r\n            item: data.item,\r\n            planta: data.planta,\r\n            area: data.area,\r\n            direccion: data.direccion,\r\n            annos: data.annos,\r\n            meses: data.meses,\r\n            dias: data.dias,\r\n            realizocomputodeservicios: data.realizocomputodeservicios,\r\n            poseeconocimientoenmaquinasviales: data.poseeconocimientoenmaquinasviales,\r\n\r\n            familiaracargodni: data.familiaracargodni,\r\n            familiaracargodni2: data.familiaracargodni2,\r\n            familiaracargonombre: data.familiaracargonombre,\r\n            familiaracargonombre2: data.familiaracargonombre2,\r\n\r\n        });\r\n        //console.log(data.foto)\r\n\r\n    }, [data]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                //console.log(values.nombre)//ok\r\n                truedata = values\r\n                setData(values)\r\n                //console.log(uploadImage)\r\n                postImage(uploadImage)\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n            setImagestate({ loading: true });\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            // Get this url from response in real world.\r\n            message.success(`${info.file.name} imagen cargada exitosamente`);\r\n\r\n            const bodyFormData = new FormData();\r\n            bodyFormData.append('image', new Blob([info.file.originFileObj], { type: 'image/jpg' }), data.nombre + data.dni + data.apellido + data.legajo);\r\n\r\n            //postImage(info.file.originFileObj)\r\n            setUploadImage(bodyFormData)\r\n\r\n            getBase64(info.file.originFileObj, imageUrl =>\r\n                setImagestate({\r\n                    imageUrl,\r\n                    loading: false,\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    const uploadButton = (\r\n        < div >\r\n            <Icon type={imagestate.loading ? 'loading' : 'plus'} />\r\n            <div className=\"ant-upload-text\">Remplazar</div>\r\n            <img src={`http://localhost:3003/upload/image/${data.foto}`} alt=\"avatar\" style={{ width: '100%' }} />\r\n        </div >\r\n    );\r\n    const { imageUrl } = imagestate;\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    return (\r\n        <div>\r\n            <Layout style={{ /* background: \"white\" */ }}>\r\n\r\n                <Content style={{ padding: '0 50px' }}>\r\n                    <Row type=\"flex\" gutter={16}>\r\n                        <Tabs defaultActiveKey=\"1\">\r\n                            <TabPane tab=\"Editar Persona\" key=\"1\">\r\n                                <Col>\r\n                                    <h2>Actualizar datos de una persona</h2>\r\n                                    <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n                                        <Form.Item label=\"Nombre\">\r\n                                            {getFieldDecorator('nombre', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    name=\"nombre\"\r\n                                                    placeholder={data.nombre}\r\n                                                    setFieldsValue={data.nombre}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Apellido\">\r\n                                            {getFieldDecorator('apellido', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.apellido}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Legajo\">\r\n                                            {getFieldDecorator('legajo', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.legajo}\r\n                                                    setFieldsValue={data.legajo}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"DNI\">\r\n                                            {getFieldDecorator('dni', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.dni}\r\n                                                    setFieldsValue={data.dni}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"Foto\" >\r\n                                            {getFieldDecorator('foto', {\r\n                                                rules: [{ required: true, message: 'Suba un archivo .png!' }],\r\n                                            })(\r\n                                                <Upload\r\n                                                    name=\"avatar\"\r\n                                                    listType=\"picture-card\"\r\n                                                    className=\"avatar-uploader\"\r\n                                                    showUploadList={false}\r\n                                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                    beforeUpload={beforeUpload}\r\n                                                    onChange={handleChange}\r\n                                                >\r\n                                                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                                                </Upload>,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        {/* <Form.Item label=\"Fecha\">\r\n                                            {getFieldDecorator('fecha', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    placeholder={data.fecha}\r\n                                                    setFieldsValue={data.fecha}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item> */}\r\n                                        <Form.Item label=\"\">\r\n                                            {getFieldDecorator('usuariosModPersona')(\r\n                                                <Input\r\n                                                    type=\"hidden\"\r\n                                                    placeholder=\"{data.usuario}\"\r\n                                                    setFieldsValue={localStorage.getItem(\"nombreusuario\")}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Apodo\">\r\n                                            {getFieldDecorator('apodo', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.apodo}\r\n                                                    setFieldsValue={data.apodo}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Cuit\">\r\n                                            {getFieldDecorator('cuit', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.cuit}\r\n                                                    setFieldsValue={data.cuit}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <h3>Estado civil</h3>\r\n                                        <Form.Item label=\"Soltero\">\r\n                                            {getFieldDecorator('soltero', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.soltero}\r\n                                                    setFieldsValue={data.soltero}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Casado\">\r\n                                            {getFieldDecorator('casado', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.casado}\r\n                                                    setFieldsValue={data.casado}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Conviviente\">\r\n                                            {getFieldDecorator('conviviente', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.conviviente}\r\n                                                    setFieldsValue={data.conviviente}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Viudo\">\r\n                                            {getFieldDecorator('viudo', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.viudo}\r\n                                                    setFieldsValue={data.vuido}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <h3>Docimicilio Real</h3>\r\n                                        <Form.Item label=\"Domicilio\">\r\n                                            {getFieldDecorator('domicilio', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.domicilio}\r\n                                                    setFieldsValue={data.domicilio}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Lugar\">\r\n                                            {getFieldDecorator('lugar', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.lugar}\r\n                                                    setFieldsValue={data.lugar}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Calle\">\r\n                                            {getFieldDecorator('calle', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.calle}\r\n                                                    setFieldsValue={data.calle}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Numero de calle\">\r\n                                            {getFieldDecorator('numero', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.numero}\r\n                                                    setFieldsValue={data.numero}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Telefono fijo\">\r\n                                            {getFieldDecorator('telefonofijo', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.telefonofijo}\r\n                                                    setFieldsValue={data.telefonofijo}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Numero de celular\">\r\n                                            {getFieldDecorator('numerodecelular', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.numerodecelular}\r\n                                                    setFieldsValue={data.numerodecelular}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Oficio/Profecion\">\r\n                                            {getFieldDecorator('oficioprofecion', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.oficioprofecion}\r\n                                                    setFieldsValue={data.oficioprofecion}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Nivel de estudios\">\r\n                                            {getFieldDecorator('niveldeestudios', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.niveldeestudios}\r\n                                                    setFieldsValue={data.niveldeestudios}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Grupo sanguineo\">\r\n                                            {getFieldDecorator('gruposanguineo', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.gruposanguineo}\r\n                                                    setFieldsValue={data.gruposanguineo}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Donante\">\r\n                                            {getFieldDecorator('donante', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.donante}\r\n                                                    setFieldsValue={data.donante}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Diabetes\">\r\n                                            {getFieldDecorator('diabetes', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.diabetes}\r\n                                                    setFieldsValue={data.diabetes}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Hipertension\">\r\n                                            {getFieldDecorator('hipertension', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.hipertension}\r\n                                                    setFieldsValue={data.hipertension}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Alergias\">\r\n                                            {getFieldDecorator('alergias', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.alergias}\r\n                                                    setFieldsValue={data.alergias}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Asma\">\r\n                                            {getFieldDecorator('asma', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.asma}\r\n                                                    setFieldsValue={data.asma}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Otros\">\r\n                                            {getFieldDecorator('otros', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.otros}\r\n                                                    setFieldsValue={data.otros}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Fecha de Ingreso\">\r\n                                            {getFieldDecorator('fechadeingreso', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    placeholder={data.fechadeingreso}\r\n                                                    setFieldsValue={data.fechadeingreso}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Resolucion\">\r\n                                            {getFieldDecorator('resolucion', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.resolucion}\r\n                                                    setFieldsValue={data.resolucion}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Categoria\">\r\n                                            {getFieldDecorator('categoria', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.categoria}\r\n                                                    setFieldsValue={data.categoria}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Item\">\r\n                                            {getFieldDecorator('item', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.item}\r\n                                                    setFieldsValue={data.item}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Planta\">\r\n                                            {getFieldDecorator('planta', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.planta}\r\n                                                    setFieldsValue={data.planta}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <h3>Presta servicio actualmente en:</h3>\r\n                                        <Form.Item label=\"Area\">\r\n                                            {getFieldDecorator('area', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.area}\r\n                                                    setFieldsValue={data.area}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Direccion\">\r\n                                            {getFieldDecorator('direccion', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.direccion}\r\n                                                    setFieldsValue={data.direccion}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <h3>Presta servicio en otras institucion publica o privada</h3>\r\n                                        <Form.Item label=\"Años\">\r\n                                            {getFieldDecorator('annos', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.annos}\r\n                                                    setFieldsValue={data.annos}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Meses\">\r\n                                            {getFieldDecorator('meses', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.meses}\r\n                                                    setFieldsValue={data.meses}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Dias\">\r\n                                            {getFieldDecorator('dias', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.dias}\r\n                                                    setFieldsValue={data.dias}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Realizo computo de servicios\">\r\n                                            {getFieldDecorator('realizocomputodeservicios', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.realizocomputodeservicios}\r\n                                                    setFieldsValue={data.realizocomputodeservicios}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Posee conocimientos en maquinas viales\">\r\n                                            {getFieldDecorator('categoria', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.categoria}\r\n                                                    setFieldsValue={data.categoria}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n\r\n                                        <h1>Contactos en caso de emergencia</h1>\r\n                                        <Form.Item label=\"En caso de emergencia celular\">\r\n                                            {getFieldDecorator('casoemergenciacelular', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.casoemergenciacelular}\r\n                                                    setFieldsValue={data.casoemergenciacelular}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"En caso de emergencia celular\">\r\n                                            {getFieldDecorator('casoemergenciacelular2', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.casoemergenciacelular2}\r\n                                                    setFieldsValue={data.casoemergenciacelular2}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"En caso de emergencia telefono fijo\">\r\n                                            {getFieldDecorator('casoemergenciafijo', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.casoemergenciafijo}\r\n                                                    setFieldsValue={data.casoemergenciafijo}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"En caso de emergencia telefono fijo 2\">\r\n                                            {getFieldDecorator('casoemergenciafijo2', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.casoemergenciafijo2}\r\n                                                    setFieldsValue={data.casoemergenciafijo2}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"En caso emergencia nombre\">\r\n                                            {getFieldDecorator('casoemergencianombre', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.casoemergencianombre}\r\n                                                    setFieldsValue={data.casoemergencianombre}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"En caso emergencia nombre 2\">\r\n                                            {getFieldDecorator('casoemergencianombre2', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.casoemergencianombre2}\r\n                                                    setFieldsValue={data.casoemergencianombre2}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <h3>Familiares a cargo:</h3>\r\n                                        <Form.Item label=\"Familiar acargo nombre\">\r\n                                            {getFieldDecorator('familiaracargonombre', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.familiaracargonombre}\r\n                                                    setFieldsValue={data.familiaracargonombre}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Familiar acargo nombre 2\">\r\n                                            {getFieldDecorator('familiaracargonombre2', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={data.familiaracargonombre2}\r\n                                                    setFieldsValue={data.familiaracargonombre2}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Familiar acargo DNI\">\r\n                                            {getFieldDecorator('familiaracargodni', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.familiaracargodni}\r\n                                                    setFieldsValue={data.familiaracargodni}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Familiar acargo DNI 2\">\r\n                                            {getFieldDecorator('familiaracargodni2', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={data.familiaracargodni2}\r\n                                                    setFieldsValue={data.familiaracargodni2}\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Row></Row>\r\n                                            <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                                                Enviar Actualizacion\r\n                                    </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </TabPane>\r\n                            <TabPane tab=\"Editar Licencia\" key=\"2\">\r\n                                <WrappedEditarLicenciaForm personaid={data.id} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Editar Altas Ascensos Bajas\" key=\"3\">\r\n                                <WrappedEditarAltasAscensosBajasForm personaid={data.id} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Editar Concepto/Conocimientos/Especiales/Clasificacion/Premios\" key=\"4\">\r\n                                <WrappedEditarConceptoConocimientosEspecialesClasificacionPremiosForm personaid={data.id} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Editar Embargo\" key=\"5\">\r\n                                <WrappedEditarEmbargoForm personaid={data.id} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Editar Garantia\" key=\"6\">\r\n                                <WrappedEditarGarantiaForm personaid={data.id} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Editar Otros Servicios Prestados\" key=\"7\">\r\n                                <WrappedEditarOtrosServiciosPrestadosForm personaid={data.id} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Editar Penas Disciplinarias Sufridas\" key=\"8\">\r\n                                <WrappedEditarPenasDisciplinariasSufridasForm personaid={data.id} />\r\n                            </TabPane>\r\n\r\n                        </Tabs>\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Red Design ©2019 Created by Hushino</Footer>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\nconst WrappedEditarPersonaForm = Form.create({ name: 'editarPersona' })(Editarpersona);\r\nexport default WrappedEditarPersonaForm","/* eslint-disable react/no-direct-mutation-state */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect, Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, Icon, Avatar, Row, Col, Layout, Form, Input, Button, Radio, Upload, message } from 'antd';\r\nconst { Meta } = Card;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nclass Crearpersona extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { selectedFile: null };\r\n    }\r\n    //const [data, setData] = useState([])\r\n    /* const [imagestate, setImagestate] = useState({ loading: false })\r\n    const [uploadImage, setUploadImage] = useState({})\r\n    const [state, setState] = useState({})\r\n\r\n    let truedata = null; \r\n    const reader = new FileReader();\r\n    //console.log(dataIndex);\r\n    const { getFieldDecorator } = props.form;*/\r\n\r\n    payload = {\r\n        nombre: \"nombrefake\",\r\n        apellido: \"nombrefake\",\r\n        foto: \"nombrefakefoto\",\r\n        legajo: \"nombrefake\",\r\n        dni: 23,\r\n        /* fecha: \"nombre\", */\r\n        apodo: \"apodo\",\r\n        cuit: 423,\r\n        soltero: \"soltero\",\r\n        casado: \"casado\",\r\n        conviviente: \"conviviente\",\r\n        viudo: \"viudo\",\r\n        domicilio: \"domicilio\",\r\n        lugar: \"lugar\",\r\n        calle: \"calle\",\r\n        numero: 432,\r\n        telefonofijo: 23,\r\n        numerodecelular: 23,\r\n        oficioprofecion: \"oficioprofecion\",\r\n        niveldeestudios: \"niveldeestudios\",\r\n        gruposanguineo: \"gruposanguineo\",\r\n        donante: \"donante\",\r\n        diabetes: \"diabetes\",\r\n        hipertension: \"hipertension\",\r\n        alergias: \"alergias\",\r\n        asma: \"asma\",\r\n        otros: \"otros\",\r\n        fechadeingreso: \"fechadeingreso\",\r\n        resolucion: \"resolucion\",\r\n        categoria: \"categoria\",\r\n        item: \"item\",\r\n        planta: \"planta\",\r\n        area: \"area\",\r\n        direccion: \"direccion\",\r\n        annos: 23,\r\n        meses: 43,\r\n        dias: 23,\r\n        realizocomputodeservicios: \"realizocomputodeservicios\",\r\n        poseeconocimientoenmaquinasviales: \"poseeconocimientoenmaquinasviales\",\r\n        familiaracargonombre2: \"familiaracargonombre2\",\r\n        familiaracargonombre: \"familiaracargonombre\",\r\n        familiaracargodni2: 34,\r\n        familiaracargodni: 43,\r\n    };\r\n\r\n    /*  function getBase64(img, callback) {\r\n \r\n         reader.addEventListener('load', () => callback(reader.result));\r\n         reader.readAsDataURL(img);\r\n     }\r\n  */\r\n    /*   function beforeUpload(file) {\r\n          \r\n  \r\n          const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n          if (!isJpgOrPng) {\r\n              message.error('Solo puedes subir archivos JPG/PNG !');\r\n          }\r\n          const isLt2M = file.size / 1024 / 1024 < 2;\r\n          if (!isLt2M) {\r\n              message.error('La imagen debe pesar menos de 2MB!');\r\n          }\r\n          return isJpgOrPng && isLt2M;\r\n      }\r\n   */\r\n    bodyFormData = new FormData();\r\n\r\n    //useEffect(() => { }, []);\r\n    /* handleChange = info => {\r\n       \r\n       if (info.file.status === 'uploading') {\r\n           setImagestate({ loading: true });\r\n           return;\r\n       }\r\n       if (info.file.status === 'done') {\r\n           message.success(`${info.file.name} imagen cargada exitosamente`);\r\n\r\n           bodyFormData.append('image', new Blob([info.file.originFileObj], { type: 'image/jpg' }));\r\n           setUploadImage(bodyFormData)\r\n\r\n           getBase64(info.file.originFileObj, imageUrl =>\r\n               setImagestate({\r\n                   imageUrl,\r\n                   loading: false,\r\n               }),\r\n           );\r\n       }\r\n\r\n   }; */\r\n\r\n    /* const uploadButton = (\r\n        <div >\r\n            <Icon type={imagestate.loading ? 'loading' : 'plus'} />\r\n            <div className=\"ant-upload-text\">Subir</div>\r\n        </div>\r\n    ); */\r\n\r\n    postData = () => axios.post(`http://localhost:8080/rrhh-server/api/addPersona`, this.payload)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n\r\n    /* const postImage = (data) => axios.post(\"http://localhost:3003/upload\", data)\r\n        .then(function (response) {\r\n            //console.log(response.data.filename)\r\n            if (response.data.filename !== undefined) {\r\n                //data.foto = response.data.filename\r\n                payload.foto = response.data.filename\r\n            }\r\n            //payload.foto = response.data.filename\r\n            postData()\r\n        })\r\n        .catch(function (response) {\r\n            console.log(response);\r\n        }) */\r\n\r\n\r\n    //const { imageUrl } = imagestate;\r\n    /* let state = ({\r\n        selectedFile: 0,\r\n    }) */\r\n    onChangeHandler3 = event => {\r\n        console.log(event.target.files[0])\r\n        //console.log(event.target.files[1])\r\n        //console.log(event.target.files[2])\r\n        this.state = {\r\n            selectedFile: event.target.files,\r\n            //selectedFile: event.target.files[0]\r\n        }\r\n    }\r\n    onClickHandler = (data) => {\r\n\r\n        /* for (let x = 0; x < this.state.selectedFile.length; x++) {\r\n            data.append('file', this.state.selectedFile[x])\r\n        } */\r\n        axios.post(\"http://localhost:3003/upload\", data, {\r\n            // receive two    parameter endpoint url ,form data\r\n        }).then(res => { // then print response status\r\n            //console.log(res.statusText)\r\n            console.log(res.data)\r\n            //console.log(res)\r\n            this.payload.foto = res.data[0].filename\r\n            this.postData()\r\n            // postData()\r\n\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                const data = new FormData()\r\n                //state.selectedFile.length = 2\r\n                for (let x = 0; x < this.state.selectedFile.length; x++) {\r\n                    data.append('file', this.state.selectedFile[x])\r\n                }\r\n                this.payload.apellido = values.apellido\r\n                this.payload.nombre = values.nombre\r\n                this.payload.dni = values.dni\r\n\r\n                this.payload.legajo = values.legajo\r\n                //payload.fecha = values.fecha.toString()\r\n\r\n                this.payload.apodo = values.apodo\r\n                this.payload.cuit = values.cuit\r\n                this.payload.soltero = values.soltero\r\n                this.payload.casado = values.casado\r\n                this.payload.conviviente = values.conviviente\r\n                this.payload.viudo = values.viudo\r\n                this.payload.domicilio = values.domicilio\r\n                this.payload.lugar = values.lugar\r\n                this.payload.calle = values.calle\r\n                this.payload.numero = values.numero\r\n                this.payload.telefonofijo = values.telefonofijo\r\n                this.payload.numerodecelular = values.numerodecelular\r\n                this.payload.oficioprofecion = values.oficioprofecion\r\n                this.payload.niveldeestudios = values.niveldeestudios\r\n                this.payload.gruposanguineo = values.gruposanguineo\r\n                this.payload.donante = values.donante\r\n                this.payload.diabetes = values.diabetes\r\n                this.payload.hipertension = values.hipertension\r\n                this.payload.alergias = values.alergias\r\n                this.payload.asma = values.asma\r\n                this.payload.otros = values.otros\r\n                this.payload.fechadeingreso = values.fechadeingreso\r\n                this.payload.resolucion = values.resolucion\r\n                this.payload.categoria = values.categoria\r\n                this.payload.item = values.item\r\n                this.payload.planta = values.planta\r\n                this.payload.area = values.area\r\n                this.payload.direccion = values.direccion\r\n                this.payload.annos = values.annos\r\n                this.meses = values.meses\r\n                this.payload.dias = values.dias\r\n                this.realizocomputodeservicios = values.realizocomputodeservicios\r\n                this.payload.poseeconocimientoenmaquinasviales = values.poseeconocimientoenmaquinasviales\r\n\r\n                this.casoemergenciacelular = values.casoemergenciacelular\r\n                this.casoemergenciacelular2 = values.casoemergenciacelular2\r\n                this.casoemergenciafijo2 = values.casoemergenciafijo2\r\n                this.casoemergenciafijo = values.casoemergenciafijo\r\n                this.casoemergencianombre = values.casoemergencianombre\r\n                this.casoemergencianombre2 = values.casoemergencianombre2\r\n\r\n                this.familiaracargodni = values.familiaracargodni\r\n                this.familiaracargodni2 = values.familiaracargodni2\r\n                this.familiaracargonombre = values.familiaracargonombre\r\n                this.familiaracargonombre2 = values.familiaracargonombre2\r\n\r\n\r\n                /*  for (let value of uploadImage.getAll('image')) {\r\n                     //console.log('asd ' + value);\r\n                     bodyFormData.append('image', new Blob([value], { type: 'image/jpg' }), payload.nombre + payload.dni + payload.apellido + payload.legajo);\r\n                     setUploadImage(bodyFormData)\r\n                 } */\r\n\r\n                this.onClickHandler(data)\r\n                // setTimeout(function () { this.onClickHandler(data) }, 100);\r\n                // onClickHandler(data)\r\n                //  postImage(data)\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        return (<div>\r\n            <Layout>\r\n                <Content style={{ padding: '0 50px' }}>\r\n                    <Row type=\"flex\" gutter={16}>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit} className=\"update-form\" >\r\n\r\n                                <Form.Item label=\"Nombre\" >\r\n                                    {getFieldDecorator('nombre', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"nombre\"\r\n                                            placeholder=\"nombre\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Apellido\">\r\n                                    {getFieldDecorator('apellido', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"apellido\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Legajo\">\r\n                                    {getFieldDecorator('legajo', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"legajo\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"DNI\">\r\n                                    {getFieldDecorator('dni', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"dni\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <div className=\"form-group files\">\r\n                                    <label>Subir foto</label>\r\n                                    <input onChange={this.onChangeHandler3}/* onChange={(evt) =>\r\n                                       \r\n                                            onChangeHandler3(evt)\r\n                                        \r\n                                    } */ multiple type=\"file\" id=\"file-input-id\" className=\"form-control\" />\r\n                                </div>\r\n                                {/*  <Form.Item label=\"Foto\" >\r\n                                    {getFieldDecorator('foto', {\r\n                                        rules: [{ required: true, message: 'Suba un archivo .png!' }],\r\n                                    })(\r\n                                        <Upload\r\n                                            name=\"avatar\"\r\n                                            listType=\"picture-card\"\r\n                                            className=\"avatar-uploader\"\r\n                                            showUploadList={false}\r\n                                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                            beforeUpload={beforeUpload}\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                                        </Upload>,\r\n                                    )}\r\n                                </Form.Item> */}\r\n                                {/*  <Form.Item label=\"Fecha\">\r\n                                    {getFieldDecorator('fecha', {\r\n                                        rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            placeholder=\"{data.fecha}\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n */}\r\n                                <Form.Item label=\"Apodo\">\r\n                                    {getFieldDecorator('apodo', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"apodo\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Cuit\">\r\n                                    {getFieldDecorator('cuit', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"cuit\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <h3>Estado civil</h3>\r\n                                <Form.Item label=\"Soltero\">\r\n                                    {getFieldDecorator('soltero', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"soltero\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Casado\">\r\n                                    {getFieldDecorator('casado', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"casado\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Conviviente\">\r\n                                    {getFieldDecorator('conviviente', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"conviviente\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Viudo\">\r\n                                    {getFieldDecorator('viudo', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"viudo\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <h3>Docimicilio Real</h3>\r\n                                <Form.Item label=\"Domicilio\">\r\n                                    {getFieldDecorator('domicilio', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"domicilio\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Lugar\">\r\n                                    {getFieldDecorator('lugar', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"lugar\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Calle\">\r\n                                    {getFieldDecorator('calle', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"calle\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Numero de calle\">\r\n                                    {getFieldDecorator('numero', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"numero de calle\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Telefono fijo\">\r\n                                    {getFieldDecorator('telefonofijo', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"telefono fijo\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Numero de celular\">\r\n                                    {getFieldDecorator('numerodecelular', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"numero de celular\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Oficio/Profesion\">\r\n                                    {getFieldDecorator('oficioprofecion', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"oficio/profesion\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Nivel de estudios\">\r\n                                    {getFieldDecorator('niveldeestudios', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"nivel de estudios\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Grupo sanguineo\">\r\n                                    {getFieldDecorator('gruposanguineo', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"grupo sanguineo\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Donante\">\r\n                                    {getFieldDecorator('donante', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"donante\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Diabetes\">\r\n                                    {getFieldDecorator('diabetes', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"diabetes\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Hipertension\">\r\n                                    {getFieldDecorator('hipertension', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"hipertension\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Alergias\">\r\n                                    {getFieldDecorator('alergias', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"alergias\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Asma\">\r\n                                    {getFieldDecorator('asma', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"asma\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Otros\">\r\n                                    {getFieldDecorator('otros', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"otros\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Fecha de Ingreso\">\r\n                                    {getFieldDecorator('fechadeingreso', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            placeholder=\"fecha de Ingreso\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Resolucion\">\r\n                                    {getFieldDecorator('resolucion', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"resolucion\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Categoria\">\r\n                                    {getFieldDecorator('categoria', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"categoria\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Item\">\r\n                                    {getFieldDecorator('item', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"item\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Planta\">\r\n                                    {getFieldDecorator('planta', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"planta\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <h3>Presta servicio actualmente en:</h3>\r\n                                <Form.Item label=\"Area\">\r\n                                    {getFieldDecorator('area', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"area\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Direccion\">\r\n                                    {getFieldDecorator('direccion', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"direccion\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <h3>Presta servicio en otras institucion publica o privada</h3>\r\n                                <Form.Item label=\"Años\">\r\n                                    {getFieldDecorator('annos', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"años\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Meses\">\r\n                                    {getFieldDecorator('meses', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"meses\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Dias\">\r\n                                    {getFieldDecorator('dias', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"dias\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Realizo computo de servicios\">\r\n                                    {getFieldDecorator('realizocomputodeservicios', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"realizo computo de servicios\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Posee conocimientos en maquinas viales\">\r\n                                    {getFieldDecorator('poseeconocimientoenmaquinasviales', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"especificar\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <h1>Contactos en caso de emergencia</h1>\r\n                                <Form.Item label=\"En caso de emergencia celular\">\r\n                                    {getFieldDecorator('casoemergenciacelular', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"en caso emergencia numero celular\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"En caso de emergencia celular\">\r\n                                    {getFieldDecorator('casoemergenciacelular2', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"en caso emergencia numero celular 2\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"En caso de emergencia telefono fijo\">\r\n                                    {getFieldDecorator('casoemergenciafijo', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"En caso de emergencia fijo\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"En caso de emergencia telefono fijo 2\">\r\n                                    {getFieldDecorator('casoemergenciafijo2', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"En caso de emergencia fijo 2\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"En caso emergencia nombre\">\r\n                                    {getFieldDecorator('casoemergencianombre', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"En caso emergencia nombre\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"En caso emergencia nombre 2\">\r\n                                    {getFieldDecorator('casoemergencianombre2', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"En caso emergencia nombre 2\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <h3>Familiares a cargo:</h3>\r\n                                <Form.Item label=\"Familiar acargo nombre\">\r\n                                    {getFieldDecorator('familiaracargonombre', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"familiar a cargo nombre\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Familiar acargo nombre 2\">\r\n                                    {getFieldDecorator('familiaracargonombre2', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"familiar a cargo nombre 2\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Familiar acargo DNI\">\r\n                                    {getFieldDecorator('familiaracargodni', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"familiar a cargo dni\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Familiar acargo DNI 2\">\r\n                                    {getFieldDecorator('familiaracargodni2', {\r\n                                        rules: [{ required: false, message: 'Ingrese un dato!' }],\r\n                                    })(\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder=\"familiar a cargo dni 2\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Row></Row>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                                        Enviar\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Red Design ©2019 Created by Hushino</Footer>\r\n            </Layout>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nconst WrappedCrearpersonaForm = Form.create({ name: 'crearpersona' })(Crearpersona);\r\nexport default WrappedCrearpersonaForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\n\r\nfunction AgregarAltasAscensosBajas(props) {\r\n\r\n    const { dataIndex } = props\r\n    const { getFieldDecorator } = props.form;\r\n    const postLicencia = () => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${dataIndex}/altasAscensosBajas`, payload)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    const payload = {\r\n        cargo: \"nombrefake\",\r\n        fecha: \"nombrefake\",\r\n        observaciones: \"nombrefake\",\r\n        expediente: \"nombrefake\",\r\n        prestaservicioen: \"nombrefake\",\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                payload.cargo = values.cargo\r\n                payload.fecha = values.fecha\r\n                payload.observaciones = values.observaciones\r\n                payload.expediente = values.expediente\r\n                payload.prestaservicioen = values.prestaservicioen\r\n                postLicencia()\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Cargo\" >\r\n                {getFieldDecorator('cargo', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        name=\"cargo\"\r\n                        placeholder=\"cargo\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('fecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder=\"fecha\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Observaciones\">\r\n                {getFieldDecorator('observaciones', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"observaciones\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Expediente\">\r\n                {getFieldDecorator('expediente', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"expediente\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Presta servicio en:\">\r\n                {getFieldDecorator('prestaservicioen', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"presta servicio en\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst WrappedCrearAgregarAltasAscensosBajasForm = Form.create({ name: 'agregarAltasAscensosBajas' })(AgregarAltasAscensosBajas);\r\nexport default WrappedCrearAgregarAltasAscensosBajasForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\nconst { TextArea } = Input;\r\n\r\nfunction AgregarConceptoConocimientosEspecialesClasificacionPremios(props) {\r\n\r\n    const { dataIndex } = props\r\n    const { getFieldDecorator } = props.form;\r\n    const postLicencia = () => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${dataIndex}/conceptoConocimientosEspecialesClasificacionPremios`, payload)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    const payload = {\r\n        cargo: \"nombrefake\",\r\n        fecha: \"nombrefake\"\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                payload.referencias = values.referencias\r\n                payload.fecha = values.fecha\r\n                postLicencia()\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Referencias\" >\r\n                {getFieldDecorator('referencias', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <TextArea rows={4}\r\n                        name=\"referencias\"\r\n                        placeholder=\"referencias\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('fecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder=\"fecha\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst WrappedCrearAgregarConceptoConocimientosEspecialesClasificacionPremiosForm = Form.create({ name: 'agregarAltasAscensosBajas' })(AgregarConceptoConocimientosEspecialesClasificacionPremios);\r\nexport default WrappedCrearAgregarConceptoConocimientosEspecialesClasificacionPremiosForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\nfunction Agregarembargos(props) {\r\n    const { dataIndex } = props\r\n    const { getFieldDecorator } = props.form;\r\n    const postEmbargo = () => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${dataIndex}/embargos`, payload)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    const payload = {\r\n        juzgado: \"nombrefake\",\r\n        fecha: \"nombrefake\",\r\n        acreedor: \"nombrefake\",\r\n        expediente: \"nombrefake\",\r\n        fianzaODeudaPropia: \"nombrefake\",\r\n        origenDeLaDeuda: \"nombrefake\",\r\n        observaciones: \"nombrefake\",\r\n        levantada: \"nombrefake\",\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                payload.juzgado = values.juzgado\r\n                payload.fecha = values.fecha\r\n                payload.acreedor = values.acreedor\r\n                payload.cantidad = values.cantidad\r\n                payload.expediente = values.expediente\r\n                payload.fianzaODeudaPropia = values.fianzaODeudaPropia\r\n                payload.origenDeLaDeuda = values.origenDeLaDeuda\r\n                payload.observaciones = values.observaciones\r\n                payload.levantada = values.levantada\r\n                postEmbargo()\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Juzgado\" >\r\n                {getFieldDecorator('juzgado', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        name=\"juzgado\"\r\n                        placeholder=\"juzgado\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('fecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder=\"fecha\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Observaciones\">\r\n                {getFieldDecorator('observaciones', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"observaciones\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Expediente\">\r\n                {getFieldDecorator('expediente', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"expediente\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Acreedor\">\r\n                {getFieldDecorator('acreedor', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"acreedor\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Cantidad\">\r\n                {getFieldDecorator('cantidad', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"cantidad\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"FianzaODeudaPropia\">\r\n                {getFieldDecorator('fianzaODeudaPropia', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"fianzaODeudaPropia\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"OrigenDeLaDeuda\">\r\n                {getFieldDecorator('origenDeLaDeuda', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"origenDeLaDeuda\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Levantada\">\r\n                {getFieldDecorator('levantada', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"levantada\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nconst WrappedAgregarembargosForm = Form.create({ name: 'agregarembargos' })(Agregarembargos);\r\nexport default WrappedAgregarembargosForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\n\r\nfunction AgregarGarantia(props) {\r\n    const { dataIndex } = props\r\n    const { getFieldDecorator } = props.form;\r\n    const postEmbargo = () => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${dataIndex}/garantia`, payload)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    const payload = {\r\n        presentadaFecha: \"nombrefake\",\r\n        garantia: \"nombrefake\",\r\n        observaciones: \"nombrefake\",\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                payload.garantia = values.garantia\r\n                payload.observaciones = values.observaciones\r\n                payload.presentadaFecha = values.presentadaFecha\r\n                postEmbargo()\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Garantia\" >\r\n                {getFieldDecorator('garantia', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        name=\"garantia\"\r\n                        placeholder=\"garantia\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('presentadaFecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder=\"Presentada Fecha\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Observaciones\">\r\n                {getFieldDecorator('observaciones', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"observaciones\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            \r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst WrappedAgregarGarantiaForm = Form.create({ name: 'agregarGarantia' })(AgregarGarantia);\r\nexport default WrappedAgregarGarantiaForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\n\r\n\r\nfunction AgregarOtrosServiciosPrestados(props) {\r\n    \r\n    const { dataIndex } = props\r\n    const { getFieldDecorator } = props.form;\r\n    const postOtrosServicios = () => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${dataIndex}/otrosServiciosPrestados`, payload)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    const payload = {\r\n        referencias: \"nombrefake\",\r\n        fecha: \"nombrefake\",\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                payload.referencias = values.referencias\r\n                payload.fecha = values.fecha\r\n                postOtrosServicios()\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"referencias\" >\r\n                {getFieldDecorator('referencias', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        name=\"referencias\"\r\n                        placeholder=\"referencias\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('fecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder=\"fecha\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n           \r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst WrappedAgregarOtrosServiciosPrestadosForm = Form.create({ name: 'agregarOtrosServiciosPrestados' })(AgregarOtrosServiciosPrestados);\r\nexport default WrappedAgregarOtrosServiciosPrestadosForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Form, Input, Button } from 'antd';\r\n\r\n\r\nfunction AgregarPenasDisciplinariasSufridas(props) {\r\n    const { dataIndex } = props\r\n    const { getFieldDecorator } = props.form;\r\n    const postEmbargo = () => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${dataIndex}/penasDisciplinariasSufridas`, payload)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    const payload = {\r\n        expediente: \"nombrefake\",\r\n        fecha: \"nombrefake\",\r\n        referencias: \"nombrefake\",\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                payload.expediente = values.expediente\r\n                payload.fecha = values.fecha\r\n                payload.referencias = values.referencias\r\n                postEmbargo()\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n            <Form.Item label=\"Expediente\" >\r\n                {getFieldDecorator('expediente', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"number\"\r\n                        name=\"expediente\"\r\n                        placeholder=\"expediente\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Fecha\">\r\n                {getFieldDecorator('fecha', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder=\"Fecha\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Referencias\">\r\n                {getFieldDecorator('referencias', {\r\n                    rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                })(\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"referencias\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            \r\n            <Form.Item>\r\n                <Row></Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                    Enviar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst WrappedAgregarPenasDisciplinariasSufridasForm = Form.create({ name: 'agregarPenasDisciplinariasSufridas' })(AgregarPenasDisciplinariasSufridas);\r\nexport default WrappedAgregarPenasDisciplinariasSufridasForm","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Tabs, Card, Icon, Avatar, Row, Col, Layout, Form, Input, Button, Radio, Upload, message } from 'antd';\r\nimport WrappedCrearAgregarAltasAscensosBajasForm from '../manyside/altasAscensosBajas/AgregarAltasAscensosBajas'\r\nimport WrappedCrearAgregarConceptoConocimientosEspecialesClasificacionPremiosForm from '../manyside/ConceptoConocimientosEspecialesClasificacionPremios/AgregarConceptoConocimientosEspecialesClasificacionPremios'\r\nimport WrappedAgregarembargosForm from '../manyside/embargos/Agregarembargos'\r\nimport WrappedAgregarGarantiaForm from '../manyside/garantia/AgregarGarantia'\r\nimport WrappedAgregarOtrosServiciosPrestadosForm from '../manyside/otrosServiciosPrestados/AgregarOtrosServiciosPrestados'\r\nimport WrappedAgregarPenasDisciplinariasSufridasForm from './penasDisciplinariasSufridas/AgregarPenasDisciplinariasSufridas'\r\nconst { Meta } = Card;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nfunction Agregarlicencia(props) {\r\n    const { dataIndex } = props.match.params\r\n    const { getFieldDecorator } = props.form;\r\n    const postLicencia = () => axios.post(`http://localhost:8080/rrhh-server/api/updatepersona/${dataIndex}/licencia`, payload)\r\n        .then(function (response) {\r\n            console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    const payload = {\r\n        fecha_licencia: \"nombrefake\",\r\n        numeroDeDias: \"nombrefake\",\r\n        observaciones: \"nombrefake\",\r\n        referencias: \"nombrefake\",\r\n        usuariosMod: \"usuariosModfake\",\r\n    };\r\n    const handleSubmit = (e) => {\r\n        const nombreusuario = localStorage.getItem(\"nombreusuario\")\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                payload.observaciones = values.observaciones\r\n                payload.referencias = values.referencias\r\n                payload.numeroDeDias = values.numeroDeDias\r\n                payload.fechaLicencia = values.fechaLicencia\r\n                payload.usuariosMod = nombreusuario\r\n                postLicencia()\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Layout>\r\n                <Content style={{ padding: '0 50px' }}>\r\n                    <Row type=\"flex\" gutter={16}>\r\n                        <Tabs defaultActiveKey=\"1\">\r\n                            <TabPane tab=\"Agregar licencia\" key=\"1\">\r\n                                <Col>\r\n                                    <Form onSubmit={handleSubmit} className=\"update-form\" >\r\n\r\n                                        <Form.Item label=\"Observaciones\" >\r\n                                            {getFieldDecorator('observaciones', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    name=\"observaciones\"\r\n                                                    placeholder=\"observaciones\"\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Referencias\">\r\n                                            {getFieldDecorator('referencias', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"referencias\"\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Numero de dias de licencia\">\r\n                                            {getFieldDecorator('numeroDeDias', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"numero de Dias\"\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Fecha\">\r\n                                            {getFieldDecorator('fechaLicencia', {\r\n                                                rules: [{ required: true, message: 'Ingrese un dato!' }],\r\n                                            })(\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    placeholder=\"fechaLicencia\"\r\n                                                />,\r\n                                            )}\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Row></Row>\r\n                                            <Button type=\"primary\" htmlType=\"submit\" className=\"update-form-button\" >\r\n                                                Enviar\r\n                                    </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </TabPane>\r\n                            <TabPane tab=\"Agregar Altas Ascensos Bajas\" key=\"2\">\r\n                                < WrappedCrearAgregarAltasAscensosBajasForm dataIndex={dataIndex} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Agregar Concepto Conocimientos Especiales Clasificacion Premios\" key=\"3\">\r\n                                <WrappedCrearAgregarConceptoConocimientosEspecialesClasificacionPremiosForm dataIndex={dataIndex} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Agregar Embargos\" key=\"4\">\r\n                                <WrappedAgregarembargosForm dataIndex={dataIndex} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Agregar Garantia\" key=\"5\">\r\n                                <WrappedAgregarGarantiaForm dataIndex={dataIndex} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Agregar Otros Servicios Prestados\" key=\"6\">\r\n                                <WrappedAgregarOtrosServiciosPrestadosForm dataIndex={dataIndex} />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Agregar Penas Disciplinarias Sufridas\" key=\"7\">\r\n                                <WrappedAgregarPenasDisciplinariasSufridasForm dataIndex={dataIndex} />\r\n                            </TabPane>\r\n                        \r\n                        </Tabs>\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Red Design ©2019 Created by Hushino</Footer>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\nconst WrappedCrearlicenciaForm = Form.create({ name: 'crearlicencia' })(Agregarlicencia);\r\nexport default WrappedCrearlicenciaForm","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { Button, Row, Menu, Icon, PageHeader, message } from 'antd';\r\nimport App from '../../App';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport UserPanel from '../userPanel/UserPanel';\r\nimport AdminPanel from '../adminPanel/AdminPanel';\r\nimport NoPageFound from '../noPageFound/NoPageFound';\r\nimport Viewpersona from '../persona/Viewpersona';\r\nimport store from '../../redux/store';\r\nimport WrappedEditarPersonaForm from '../persona/Editarpersona';\r\nimport WrappedCrearpersonaForm from '../persona/Crearpersona';\r\nimport WrappedCrearlicenciaForm from '../persona/manyside/Agregarlicencia'\r\n//import WrappedEliminarpersonaForm from '../persona/manyside/Eliminarpersona'\r\n//import '@ant-design/dark-theme' //https://github.com/ant-design/ant-design-dark-theme/blob/master/index.ts\r\n\r\nfunction Header() {\r\n  //const [data, setData] = useState([]);\r\n  /*  const [data, setData] = useState([]);\r\n   const isRoleUser = data === 'USER'; */\r\n  const isRoleAdmin = localStorage.getItem(\"role\") === 'ADMIN';\r\n\r\n  const isAnyRole = localStorage.getItem(\"role\") === 'USER' || localStorage.getItem(\"role\") === \"ADMIN\";\r\n\r\n  const setLight = () => localStorage.setItem(\"theme\", \"LIGHT\");\r\n  const setDark = () => localStorage.setItem(\"theme\", \"DARK\");\r\n  const isDark = localStorage.getItem(\"theme\") === 'DARK';\r\n  const isLight = localStorage.getItem(\"theme\") === 'LIGHT';\r\n  const [state, setState] = useState();\r\n  useEffect(() => {\r\n    /* let reduxsub\r\n    let isSubscribed = true\r\n    if (isSubscribed) {\r\n      reduxsub = store.subscribe(() => {});\r\n    }\r\n    return () => {\r\n      reduxsub()\r\n      isSubscribed = false\r\n    } */\r\n    /* setDark()\r\n    if (isDark) {\r\n      setLight()\r\n\r\n    } */\r\n\r\n  }, []);\r\n  /* const handleColorChange = () => {\r\n    window.less\r\n      .modifyVars(vars)\r\n      .then(() => {\r\n        // message.success(`Theme updated successfully`);\r\n        this.setState({ vars });\r\n        localStorage.setItem('app-theme', JSON.stringify(vars));\r\n      })\r\n      .catch(error => {\r\n        message.error('Failed to update theme');\r\n      });\r\n  }; */\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <nav>\r\n        <div className=\"clearfix\" id=\"header\">\r\n          <div className=\"ant-row\">\r\n            <div className=\"ant-col ant-col-xs-24 ant-col-sm-24 ant-col-md-5 ant-col-lg-5 ant-col-xl-5 ant-col-xxl-4\">\r\n            </div>\r\n\r\n            <Menu mode=\"horizontal\">\r\n              <Menu.Item key=\"mail\" >\r\n                <Link to=\"/\">\r\n                  <Icon type=\"home\"/>\r\n                  Inicio\r\n                </Link>\r\n              </Menu.Item>\r\n              {\r\n                isAnyRole\r\n                  ? <Menu.Item key=\"user\" >\r\n                    <Link to=\"/user\">\r\n                      <Icon type=\"gold\" />\r\n                      Panel Usuario\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  : \"\"\r\n\r\n              }\r\n\r\n              {\r\n                isRoleAdmin\r\n                  ? <Menu.Item key=\"admin\" >\r\n                    <Link to=\"/admin\">\r\n                      <Icon type=\"appstore\" />\r\n                      Panel Administrador\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  : \"\"\r\n              }\r\n            </Menu>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={App} />\r\n        {\r\n          isAnyRole\r\n            ? <Route path=\"/user/\" component={UserPanel} />\r\n            : \"\"\r\n\r\n        }\r\n        {\r\n          isRoleAdmin\r\n            ? <Route path=\"/admin/\" component={AdminPanel} />\r\n            : \"\"\r\n\r\n        }\r\n        <Route path=\"/viewpersona/:dataIndex/\" component={Viewpersona} />\r\n        <Route path=\"/:dataIndex/editar\" component={WrappedEditarPersonaForm} />\r\n        <Route path=\"/:dataIndex/agregarlicencia\" component={WrappedCrearlicenciaForm} />\r\n        <Route path=\"/crearpersona\" component={WrappedCrearpersonaForm} />\r\n        {/* <Route path=\"/:dataIndex/eliminar\" component={WrappedEliminarpersonaForm} /> */}\r\n        <Route component={NoPageFound} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Header","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport * as stores from './redux/store'\r\nimport './styles/index.less';\r\n//import './index.css';\r\n//import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Header from './components/header/Header';\r\n\r\nReactDOM.render(\r\n    <Provider store={stores.default}>\r\n            <Header />\r\n    </Provider>,\r\n    document.getElementById('header'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n/* \"accessToken\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyIiwiaWF0IjoxNTY4NjY3OTQ3LCJleHAiOjE1NjkyNzI3NDd9.3lS9EhlHUgtnOSGui6sIEJcYu8wm5Ifgo3AaKagaoxIpIzN4x6U8jXHCZFH17CU5HOlaA0ja1FsK9E6ZplhO8Q\",\r\n    \"tokenType\": \"Bearer\",\r\n        \"roles\": [\r\n            {\r\n                \"authority\": \"USER\"\r\n            }\r\n] */\r\n\r\n/* ReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')); */\r\n"],"sourceRoot":""}